# ===========================================================
# Linter validation jobs for dispatch-portal-frontend module
# ===========================================================
dispatch-portal-frontend-linter:
  stage: validation
  image: node:10
  before_script:
    - npm install --prefix dispatch-portal-frontend
  script:
    - npm run lint --prefix dispatch-portal-frontend
  cache:
    policy: push
    key: "dispatch-portal-frontend-${CI_COMMIT_REF_SLUG}"
    paths:
      - dispatch-portal-frontend/node_modules
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(feature|fix)\/.+$/
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/
  tags:
    - kubernetes

# ===================================================
# Unit tests jobs for dispatch-portal-frontend module
# ===================================================
dispatch-portal-frontend-test:
  stage: unit_test
  image: node:10
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  script:
    - npm run test --prefix dispatch-portal-frontend
  cache:
    policy: pull
    key: "dispatch-portal-frontend-${CI_COMMIT_REF_SLUG}"
    paths:
      - dispatch-portal-frontend/node_modules
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(feature|fix)\/.+$/
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/
  dependencies:
    - dispatch-portal-frontend-linter
  tags:
    - kubernetes

dispatch-portal-frontend-test-e2e:
  stage: unit_test
  image: cypress/base:10
  variables:
    CI: 1
  before_script:
    - npm install --prefix dispatch-portal-frontend
    - npm run build --prefix dispatch-portal-frontend
  script:
    - npm run ci:test --prefix dispatch-portal-frontend
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(feature|fix)\/.+$/
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/
  tags:
    - kubernetes

# =================================================================
# Images builds jobs for dispatch-portal-frontend module components
# =================================================================
dispatch-portal-frontend-nextjs-build:
  stage: build
  variables:
    MODULE_NAME: dispatch-portal-frontend
    MODULE_VERSION: ${CI_PIPELINE_ID}
  script:
    - docker build --build-arg CURRENT_ENV="PRO" --build-arg DNS_ENVIRONMENT=${DNS_ENVIRONMENT_VAR} -t ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-latest -t ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION} -f ${MODULE_NAME}/Dockerfile .
    - python3 ci-utils/ecr/manage_ecr_docker_images.py -r automation-${MODULE_NAME}
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-latest
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION}
  extends: .build_app_image

dispatch-portal-frontend-nginx-build:
  stage: build
  variables:
    MODULE_NAME: dispatch-portal-frontend/nginx
    MODULE_VERSION: ${CI_PIPELINE_ID}
  script:
    - docker build -t ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-latest -t ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION} -f ${MODULE_NAME}/Dockerfile .
    - python3 ci-utils/ecr/manage_ecr_docker_images.py -r automation-${MODULE_NAME}
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-latest
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION}
  extends: .build_app_image
