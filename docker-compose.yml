version: '3.1'
services:
  nats-streaming:
    restart: on-failure
    build:
      context: .
      dockerfile: nats-streaming-server/Dockerfile
    ports:
      - 4222:4222
      - 8222:8222

  # EXAMPLE OF BASE-MICROSERVICE
  # ============================
  #  base-microservice:
  #    build:
  #      # Context must be the root of the monorepo since we need to copy custompackages
  #      context: .
  #      dockerfile: base-microservice/Dockerfile
  #    env_file:
  #      - base-microservice/src/config/env
  #    depends_on:
  #      - "nats-streaming"
  #    ports:
  #      - 9100:9100
  # ============================
  velocloud-orchestrator:
    build:
      # Context must be the root of the monorepo since we need to copy custompackages
      context: .
      dockerfile: velocloud-orchestrator/Dockerfile
    env_file:
      - velocloud-orchestrator/src/config/env
    depends_on:
      - "nats-streaming"
    ports:
      - 5000:5000
      - 9110:9090

  velocloud-bridge:
    build:
      # Context must be the root of the monorepo since we need to copy custompackages
      context: .
      dockerfile: velocloud-bridge/Dockerfile
    env_file:
      - velocloud-bridge/src/config/env
    depends_on:
      - "nats-streaming"
    ports:
      - 5001:5000
      - 9120:9090

  notifier:
    build:
      # Context must be the root of the monorepo since we need to copy custompackages
      context: .
      dockerfile: notifier/Dockerfile
    env_file:
      - notifier/src/config/env
    depends_on:
      - "nats-streaming"
    ports:
      - 5002:5000

  last-contact-report:
    build:
      # Context must be the root of the monorepo since we need to copy custompackages
      context: .
      dockerfile: last-contact-report/Dockerfile
    env_file:
      - last-contact-report/src/config/env
    depends_on:
      - "nats-streaming"
    ports:
      - 5003:5000

  edge-monitoring-report:
    build:
      # Context must be the root of the monorepo since we need to copy custompackages
      context: .
      dockerfile: edge-monitoring-report/Dockerfile
    env_file:
      - edge-monitoring-report/src/config/env
    depends_on:
      - "nats-streaming"
    ports:
      - 5004:5000

  service-outage-triage:
    build:
      # Context must be the root of the monorepo since we need to copy custompackages
      context: .
      dockerfile: service-outage-triage/Dockerfile
    env_file:
      - service-outage-triage/src/config/env
    depends_on:
      - "nats-streaming"
    ports:
      - 5005:5000

  bruin-bridge:
    build:
      # Context must be the root of the monorepo since we need to copy custompackages
      context: .
      dockerfile: bruin-bridge/Dockerfile
    env_file:
      - bruin-bridge/src/config/env
    depends_on:
      - "nats-streaming"
    ports:
      - 5006:5000

  service-outage-monitor:
    build:
      # Context must be the root of the monorepo since we need to copy custompackages
      context: .
      dockerfile: service-outage-monitor/Dockerfile
    env_file:
      - service-outage-monitor/src/config/env
    depends_on:
      - "nats-streaming"
    ports:
      - 5007:5000

  redis:
    image: redis:5.0.4
    ports:
      - 6379:6379
    expose:
      - 6379

  prometheus:
    build:
      context: .
      dockerfile: metrics-dashboard/prometheus/Dockerfile
    restart: unless-stopped
    volumes:
      - ./metrics-dashboard/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090

  grafana:
    build:
      context: .
      dockerfile: metrics-dashboard/grafana/Dockerfile
    depends_on:
      - prometheus
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./metrics-dashboard/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./metrics-dashboard/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./metrics-dashboard/grafana/dashboards-definitions:/var/lib/grafana/dashboards