#
# Using gitlab-ci extends to reuse scripts between jobs (https://docs.gitlab.com/ee/ci/yaml/#extends)
#
.check_ecs_resources_template: &check_ecs_resources_template
  stage: basic_infra
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  image:
    name: ${CI_REGISTRY}/mettel/docker_images/alpine3.6_common_requirements:${DOCKER_IMAGE_UTILS_VERSION}
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - export TF_VAR_bruin_bridge_desired_tasks=${bruin_bridge_desired_tasks}
    - export TF_VAR_cts_bridge_desired_tasks=${cts_bridge_desired_tasks}
    - export TF_VAR_customer_cache_desired_tasks=${customer_cache_desired_tasks}
    - export TF_VAR_digi_bridge_desired_tasks=${digi_bridge_desired_tasks}
    - export TF_VAR_dispatch_portal_backend_desired_tasks=${dispatch_portal_backend_desired_tasks}
    - export TF_VAR_dispatch_portal_frontend_desired_tasks=${dispatch_portal_frontend_desired_tasks}
    - export TF_VAR_hawkeye_bridge_desired_tasks=${hawkeye_bridge_desired_tasks}
    - export TF_VAR_hawkeye_customer_cache_desired_tasks=${hawkeye_customer_cache_desired_tasks}
    - export TF_VAR_hawkeye_outage_monitor_desired_tasks=${hawkeye_outage_monitor_desired_tasks}
    - export TF_VAR_last_contact_report_desired_tasks=${last_contact_report_desired_tasks}
    - export TF_VAR_lit_bridge_desired_tasks=${lit_bridge_desired_tasks}
    - export TF_VAR_lumin_billing_report_desired_tasks=${lumin_billing_report_desired_tasks}
    - export TF_VAR_metrics_prometheus_desired_tasks=${metrics_prometheus_desired_tasks}
    - export TF_VAR_nats_server_desired_tasks=${nats_server_desired_tasks}
    - export TF_VAR_nats_server_1_desired_tasks=${nats_server_1_desired_tasks}
    - export TF_VAR_nats_server_2_desired_tasks=${nats_server_2_desired_tasks}
    - export TF_VAR_notifier_desired_tasks=${notifier_desired_tasks}
    - export TF_VAR_service_affecting_monitor_desired_tasks=${service_affecting_monitor_desired_tasks}
    - export TF_VAR_service_dispatch_monitor_desired_tasks=${service_dispatch_monitor_desired_tasks}
    - export TF_VAR_service_outage_monitor_1_desired_tasks=${service_outage_monitor_1_desired_tasks}
    - export TF_VAR_service_outage_monitor_2_desired_tasks=${service_outage_monitor_2_desired_tasks}
    - export TF_VAR_service_outage_monitor_3_desired_tasks=${service_outage_monitor_3_desired_tasks}
    - export TF_VAR_service_outage_monitor_4_desired_tasks=${service_outage_monitor_4_desired_tasks}
    - export TF_VAR_service_outage_monitor_triage_desired_tasks=${service_outage_monitor_triage_desired_tasks}
    - export TF_VAR_sites_monitor_desired_tasks=${sites_monitor_desired_tasks}
    - export TF_VAR_tnba_monitor_desired_tasks=${tnba_monitor_desired_tasks}
    - export TF_VAR_tnba_feedback_desired_tasks=${tnba_feedback_desired_tasks}
    - export TF_VAR_t7_bridge_desired_tasks=${t7_bridge_desired_tasks}
    - export TF_VAR_velocloud_bridge_desired_tasks=${velocloud_bridge_desired_tasks}
    - export TF_VAR_ENVIRONMENT=automation-${ENVIRONMENT_SLUG}
    - python3 ci-utils/ecs/check_ecs_resources.py
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/
    - if: $CI_COMMIT_BRANCH == "master"
  tags:
    - kubernetes

.destroy_environment_aws_nuke_template: &destroy_environment_aws_nuke_template
  stage: destroy
  image: python:3.8.0-alpine3.10
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_REGION: $AWS_REGION
    AWS_DEFAULT_REGION: $AWS_REGION
    AWS_NUKE_VERSION: $AWS_NUKE_VERSION
    AWS_NUKE_OPTS: "--no-dry-run"
    AWS_NUKE_CONFIG_FILE: $AWS_NUKE_CONFIG_FILE
  script:
    - apk add --update-cache --upgrade curl
    - apk add --no-cache py-pip
    - pip3 install -r ci-utils/aws-nuke/requirements.txt
    - curl -L --output aws-nuke https://github.com/rebuy-de/aws-nuke/releases/download/v${AWS_NUKE_VERSION}/aws-nuke-v${AWS_NUKE_VERSION}-linux-amd64
    - chmod +x ./aws-nuke
    - mv ./aws-nuke /bin/aws-nuke
    - curl -o /usr/local/bin/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-v${ECS_CLI_VERSION}
    - chmod +x /usr/local/bin/ecs-cli
    - python3 ci-utils/delete-environments-aws-resources/main.py -e $ENVIRONMENT -d
    - python3 ci-utils/aws-nuke/aws_nuke_conf_generator.py -e $ENVIRONMENT
    - aws-nuke -c ${AWS_NUKE_CONFIG_FILE} --profile default --force ${AWS_NUKE_OPTS}
    - python3 ci-utils/delete-environments-aws-resources/main.py -e $ENVIRONMENT -z -b
    - python3 ci-utils/ecr/manage_ecr_docker_images.py -d True -e ${ENVIRONMENT} -a True -p True
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
  tags:
    - kubernetes