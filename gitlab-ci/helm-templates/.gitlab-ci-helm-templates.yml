.helm_template_deploy_chart: &helm_template_deploy_chart
  image:
    name: ${CI_REGISTRY}/mettel/docker_images/python3.6_alpine_common_utils:${DOCKER_IMAGE_UTILS_VERSION}
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  cache:
    policy: pull
    key: "necessary-terraform-vars-${CI_COMMIT_REF_SLUG}"
    paths:
      - output
  script:
    # INSTALL KUBE CONFIG
    - aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME}
    # INITIALIZE HELM
    - python3 ci-utils/helm/add_helm_repositories.py
    - helm repo update
    - helm dep up ${HELM_CHART_DIR}
    # GET DOCKER IMAGE FOR HELM CHART
    - python3 ci-utils/ecr/ecr_images_util.py -e ${ENVIRONMENT_NAME} -g -a -p -f "$DOCKER_IMAGES_FILE"
    - source ci-utils/environments/build_number_assign.sh
    # GET HELM CHART SET ATTRIBUTES
    - source ci-utils/environments/deploy_environment_vars.sh
    - envsubst < ${HELM_CHART_DIR}/values.yaml.tpl > values.yaml
    # DEPLOY HELM CHART
    - >
      if [ "$TF_VAR_CURRENT_ENVIRONMENT" == "production" ]; then
        helm upgrade --install ${HELM_CHART_RELEASE_NAME} ./${HELM_CHART_DIR} \
          -f values.yaml -n default
      else
        helm upgrade --install ${HELM_CHART_RELEASE_NAME} ./${HELM_CHART_DIR} \
          -f values.yaml -n ${ENVIRONMENT_NAME}
      fi