#
# Using gitlab-ci extends to reuse scripts between jobs (https://docs.gitlab.com/ee/ci/yaml/#extends)
#

.terraform_template_destroy_basic_infra: &terraform_template_destroy_basic_infra
  image:
    name: ${CI_REGISTRY}/mettel/dockers/images/terraform-1.x:1.1.0
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    # INSTALL KUBE CONFIG
    - aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME}
    # DESTROY PROMETHEUS HELM CHART
    - helm -n prometheus uninstall prometheus
    # Iterate over terraform directories in module
    - cd "${MODULE}" || exit 1
    - >
      for i in $(find . -mindepth 1 -maxdepth 1 -type d | sort -n -r | sed 's|^./||' || exit 1); do
          (
              cd "${i}" || exit
              echo "The current Workdir is $i"
              if [[ ${i} != "6-elasticaches" && ${i} != "3-registry" ]]; then
                  terraform init -backend=true -get=true -input=false
                  if [[ ${i} != "5-access" ]]; then
                      terraform workspace select ${TF_VAR_CURRENT_ENVIRONMENT}
                      terraform refresh
                      terraform DESTROY -auto-approve
                  fi
                  cd ..
              elif [[ ${i} != "3-registry" ]]; then
                  for i in $(find . -mindepth 1 -maxdepth 1 -type d | sort -n -r | sed 's|^./||' || exit 1); do
                      (
                          cd "${i}" || exit 1
                          if [[ ${i} != "modules" ]]; then
                            echo "Terraform directory $i"
                            terraform init
                            terraform workspace select "${TF_VAR_ENVIRONMENT}"
                            terraform refresh
                            terraform plan && terraform destroy -auto-approve
                          fi
                          cd ..
                      )
                  done
                  cd "${CI_PROJECT_DIR}/${MODULE}" || exit 1
              fi
          )
      done


.terraform_template_destroy_one_folder: &terraform_template_destroy_one_folder
  image:
    name: ${CI_REGISTRY}/mettel/dockers/images/terraform-1.x:1.1.0
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd "${MODULE}" || exit 1
    - terraform init -backend=true -get=true -input=false
    - terraform refresh
    - terraform workspace select ${TF_VAR_CURRENT_ENVIRONMENT}
    - terraform destroy -auto-approve