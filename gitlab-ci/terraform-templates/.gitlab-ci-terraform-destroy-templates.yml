#
# Using gitlab-ci extends to reuse scripts between jobs (https://docs.gitlab.com/ee/ci/yaml/#extends)
#

.terraform_template_destroy_basic_infra: &terraform_template_destroy_basic_infra
  image:
    name: ${CI_REGISTRY}/mettel/docker_images/terraform_0.14_common_utils:${DOCKER_IMAGE_UTILS_VERSION}
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    # INSTALL KUBE CONFIG
    - aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME}
    # DESTROY PROMETHEUS HELM CHART
    - helm -n prometheus uninstall prometheus
    # Iterate over terraform directories in module
    - cd "${MODULE}" || exit 1
    - >
      for i in $(find . -mindepth 1 -maxdepth 1 -type d | sort -n -r | sed 's|^./||' || exit 1); do
          (
              cd "${i}" || exit
              echo "The current Workdir is $i"
              terraform init -backend=true -get=true -input=false
              if [[ ${i} != "0-ecr-repositories" && ${i} != "4-eks-roles" ]]; then
                  terraform workspace select ${TF_VAR_CURRENT_ENVIRONMENT}
                  terraform refresh
                  terraform DESTROY -auto-approve
              fi
              cd ..
          )
      done

.terraform_template_destroy_elastic: &terraform_template_destroy_elastic
  image:
    name: ${CI_REGISTRY}/mettel/docker_images/terraform_0.14_common_utils:${DOCKER_IMAGE_UTILS_VERSION}
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - mkdir -p output
    # Iterate over terraform directories and subdirectories in module
    - cd ${MODULE} || exit 1
    - >
      for i in $(find . -mindepth 1 -maxdepth 1 -type d | sort -n -r | sed 's|^./||' || exit 1); do
          (
              cd "${i}" || exit 1
              if [[ ${i} != "modules" ]]; then
                echo "Terraform directory $i"
                terraform init
                terraform workspace new "${TF_VAR_ENVIRONMENT}" || terraform workspace select "${TF_VAR_ENVIRONMENT}"
                terraform refresh
                terraform plan && terraform destroy -auto-approve
                if [[ ${i} == "0-redis" ]]; then
                  terraform output REDIS_HOSTNAME > ${CI_PROJECT_DIR}/output/redis_hostname.txt
                elif [[ ${i} == "1-redis-customer-cache" ]]; then
                  terraform output REDIS_CUSTOMER_CACHE_HOSTNAME > ${CI_PROJECT_DIR}/output/redis_customer_cache_hostname.txt
                elif [[ ${i} == "2-redis-tnba-feedback" ]]; then
                  terraform output REDIS_TNBA_FEEDBACK_HOSTNAME > ${CI_PROJECT_DIR}/output/redis_tnba_feedback_hostname.txt
                elif [[ ${i} == "3-redis-email-tagger" ]]; then
                  terraform output REDIS_EMAIL_TAGGER_HOSTNAME > ${CI_PROJECT_DIR}/output/redis_email_tagger_hostname.txt
                fi
              fi
          )
      done
    - python3 ci-utils/ecr/ecr_images_util.py -d True -e ${TF_VAR_ENVIRONMENT} -a True -p True
  tags:
    - kubernetes

.terraform_template_destroy_data_collector: &terraform_template_destroy_data_collector
  image:
    name: ${CI_REGISTRY}/mettel/docker_images/terraform_0.14_common_utils:${DOCKER_IMAGE_UTILS_VERSION}
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - >
      if [ "$TF_VAR_CURRENT_ENVIRONMENT" == "production" ]; then
        apk add zip unzip
        export TF_VAR_REST_API_DATA_COLLECTOR_AUTH_TOKEN=${REST_API_DATA_COLLECTOR_AUTH_TOKEN}
        export TF_VAR_REST_API_DATA_COLLECTOR_MONGODB_COLLECTION=${REST_API_DATA_COLLECTOR_MONGODB_COLLECTION}
        export TF_VAR_REST_API_DATA_COLLECTOR_MONGODB_DATABASE=${REST_API_DATA_COLLECTOR_MONGODB_DATABASE}
        envsubst < infra-as-code/data-collector/init.tf > temp_dc.tf
        envsubst < infra-as-code/data-collector/variables.tf > temp_vars_dc.tf
        mv temp_dc.tf infra-as-code/data-collector/init.tf
        mv temp_vars_dc.tf infra-as-code/data-collector/variables.tf
        cd infra-as-code/data-collector
        terraform init
        terraform destroy -auto-approve
        cd ${CI_PROJECT_DIR}
      fi
  tags:
    - kubernetes