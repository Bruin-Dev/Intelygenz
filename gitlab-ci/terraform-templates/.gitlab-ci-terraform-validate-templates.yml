.terraform_validate_template: &terraform_validate_template
  image:
    name: ${CI_REGISTRY}/mettel/docker_images/terraform_1.0.1_common_utils:${DOCKER_IMAGE_UTILS_VERSION}
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  before_script:
    - terraform init -backend=true -get=true -input=false
    - export ENVIRONMENT_SLUG=$(echo -n "${CI_COMMIT_REF_SLUG}" | sha256sum | cut -c1-8)
    - export TF_VAR_ENVIRONMENT=automation-${ENVIRONMENT_SLUG}
    - export TF_VAR_VELOCLOUD_CREDENTIALS=${VELOCLOUD_CREDENTIALS_DEV}
    - export TF_VAR_EMAIL_ACC_PWD=${EMAIL_ACC_PWD}
    - export TF_VAR_DISPATCH_PORTAL_SERVER_PORT=${DISPATCH_PORTAL_SERVER_PORT}
    - export TF_VAR_MONITORING_SECONDS=${MONITORING_SECONDS}
    - export TF_VAR_LAST_CONTACT_RECIPIENT=${LAST_CONTACT_RECIPIENT_DEV}
    - export TF_VAR_BRUIN_CLIENT_ID_PRO=${BRUIN_CLIENT_ID_PRO}
    - export TF_VAR_BRUIN_CLIENT_SECRET_PRO=${BRUIN_CLIENT_SECRET_PRO}
    - export TF_VAR_BRUIN_LOGIN_URL_PRO=${BRUIN_LOGIN_URL_PRO}
    - export TF_VAR_BRUIN_BASE_URL_PRO=${BRUIN_BASE_URL_PRO}
    - export TF_VAR_LIT_CLIENT_ID=${LIT_CLIENT_ID_DEV}
    - export TF_VAR_LIT_CLIENT_SECRET=${LIT_CLIENT_SECRET_DEV}
    - export TF_VAR_LIT_CLIENT_USERNAME=${LIT_CLIENT_USERNAME_DEV}
    - export TF_VAR_LIT_CLIENT_PASSWORD=${LIT_CLIENT_PASSWORD_DEV}
    - export TF_VAR_LIT_CLIENT_SECURITY_TOKEN=${LIT_CLIENT_SECURITY_TOKEN_DEV}
    - export TF_VAR_LIT_LOGIN_URL=${LIT_LOGIN_URL_DEV}
    - export TF_VAR_LIT_DOMAIN=${LIT_DOMAIN_DEV}
    - export TF_VAR_CURRENT_ENVIRONMENT=dev
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/
  tags:
    - kubernetes

.terraform_dirs_validate_template: &terraform_dirs_validate_template
  image:
    name: ${CI_REGISTRY}/mettel/docker_images/terraform_1.0.1_common_utils:${DOCKER_IMAGE_UTILS_VERSION}
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd ${MODULE} || exit 1
    - >
      for i in $(ls -d */ | cut -d " " -f10); do
          (
              cd "${i}" || exit
              echo "The current Workdir is $i"
              if [[ ${i} != "4-elasticaches" ]]; then
                  terraform init -backend=true -get=true -input=false
                  terraform validate
                  cd ..
              else
                  for e in $(ls -d */ | cut -d " " -f10); do
                      (
                          cd "${e}" || exit
                          if [[ ${e} != "modules" ]]; then
                            terraform init -backend=true -get=true -input=false
                            terraform validate
                          fi
                          cd ..
                      )
              fi
          )
      done
  tags:
    - kubernetes