import base64
import json
from datetime import datetime, timedelta
from typing import Any

from shortuuid import uuid


def to_json_bytes(message: dict[str, Any]):
    return json.dumps(message, default=str, separators=(",", ":")).encode()


class EmailRepository:
    def __init__(self, nats_client, config):
        self._nats_client = nats_client
        self._config = config

    async def send_email(self, digi_reboot_report, **kwargs):
        csv = "{}".format(kwargs.get("csv", "digi_reboot_report.csv"))

        yesterday_date = datetime.now() - timedelta(days=2)

        html = f"""\
        <html>
          <head></head>
          <body>
            <p>Please see more recent report with data through the end of {yesterday_date.strftime("%Y-%m-%d")}.
               <br>
               This report is generated by the MetTel IPA system.
            </p>
          </body>
        </html>
        """
        email_object = {
            "request_id": uuid(),
            "body": {
                "email_data": {
                    "subject": f'DiGi Recovery Report ({(datetime.now()- timedelta(days=1)).strftime("%Y-%m-%d")}) ',
                    "recipient": self._config.DIGI_CONFIG["recipient"],
                    "text": "this is the accessible text for the email",
                    "html": html,
                    "images": [],
                    "attachments": [
                        {"name": csv, "data": base64.b64encode(digi_reboot_report.encode("utf-8")).decode("utf-8")}
                    ],
                }
            },
        }
        await self._nats_client.publish("notification.email.request", to_json_bytes(email_object))
