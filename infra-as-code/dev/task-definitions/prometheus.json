[
  {
    "name": "metrics-prometheus",
    "image": "${prometheus_image}",
    "portMappings": [
      {
        "containerPort": 9090,
        "hostPort": 9090
      }
    ],
    "networkMode": "awsvpc",
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${log_group}",
        "awslogs-region": "us-east-1",
        "awslogs-stream-prefix": "${log_prefix}"
      }
    },
    "healthCheck": {
      "command": [
        "CMD-SHELL",
        "wget http://localhost:9090/-/healthy -O index || exit 1"
      ],
      "interval": 30,
      "retries": 3,
      "startPeriod": 30,
      "timeout": 5
    },
    "mountPoints": [
        {
          "sourceVolume": "prometheus_storage",
          "containerPath": "/prometheus"
        }
    ],
    "command": ["--config.file=/etc/prometheus/prometheus.yml",
                "--storage.tsdb.path=/prometheus",
                "--storage.tsdb.retention.time=6m",
                "--storage.tsdb.min-block-duration=2m",
                "--storage.tsdb.max-block-duration=2m"],
    "environment": []
  },
  {
    "name": "metrics-thanos-sidecar",
    "image": "${thanos_image}",
    "portMappings": [
      {
        "containerPort": 10091,
        "hostPort": 10091
      },
      {
        "containerPort": 10902,
        "hostPort": 10902
      }
    ],
    "networkMode": "awsvpc",
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${log_group}",
        "awslogs-region": "us-east-1",
        "awslogs-stream-prefix": "${log_prefix}"
      }
    },
    "healthCheck": {
      "command": [
        "CMD-SHELL",
        "wget http://localhost:10902/-/ready -O index || exit 1"
      ],
      "interval": 30,
      "retries": 3,
      "startPeriod": 30,
      "timeout": 5
    },
    "mountPoints": [
        {
          "sourceVolume": "prometheus_storage",
          "containerPath": "/prometheus"
        }
    ],
    "command": ["sidecar",
                "--tsdb.path=/prometheus",
                "--prometheus.url=http://localhost:9090",
                "--objstore.config-file=/tmp/bucket_config.yaml",
                "--grpc-address=localhost:10091",
                "--http-address=localhost:10902"],
    "dependsOn": [
      {
          "containerName": "metrics-prometheus",
          "condition": "HEALTHY"
      }
    ]
  },
  {
    "name": "metrics-thanos-querier",
    "image": "${thanos_querier_image}",
    "portMappings": [
      {
        "containerPort": ${thanos_querier_HTTP_PORT},
        "hostPort": ${thanos_querier_HTTP_PORT}
      }
    ],
    "networkMode": "awsvpc",
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${log_group}",
        "awslogs-region": "us-east-1",
        "awslogs-stream-prefix": "${log_prefix}"
      }
    },
    "healthCheck": {
      "command": [
        "CMD-SHELL",
        "wget http://localhost:${thanos_querier_HTTP_PORT}/-/ready -O index || exit 1"
      ],
      "interval": 30,
      "retries": 3,
      "startPeriod": 30,
      "timeout": 5
    },
    "command": ["query",
                "--http-address=localhost:${thanos_querier_HTTP_PORT}",
                "--store=localhost:10091"],
    "dependsOn": [
      {
          "containerName": "metrics-prometheus",
          "condition": "HEALTHY"
      },
      {
          "containerName": "metrics-thanos-sidecar",
          "condition": "HEALTHY"
      }
    ]
  },
  {
    "name": "grafana",
    "image": "${grafana_image}",
    "portMappings": [
      {
        "containerPort": 3000,
        "hostPort": 3000
      }
    ],
    "networkMode": "awsvpc",
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${log_group}",
        "awslogs-region": "us-east-1",
        "awslogs-stream-prefix": "${log_prefix}"
      }
    },
    "environment": [
      {
        "name": "GF_SECURITY_ADMIN_PASSWORD",
        "value": "${GF_SECURITY_ADMIN_PASSWORD}"
      }],
    "dependsOn": [
      {
          "containerName": "metrics-prometheus",
          "condition": "HEALTHY"
      },
      {
          "containerName": "metrics-thanos-sidecar",
          "condition": "HEALTHY"
      },
      {
          "containerName": "metrics-thanos-querier",
          "condition": "HEALTHY"
      }
    ]
  }
]
