# ===============================================
# Images builds jobs for metrics-dashboard module
# ===============================================
grafana-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/grafana
    MODULE_VERSION: ${CI_PIPELINE_ID}
  services:
    - docker:18-dind
  before_script:
    - apk add --no-cache curl jq python py-pip bash
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-east-1)
  script:
    - source ci-utils/environment_assign.sh
    - sed -i "s/ENVIRONMENT/${ENVIRONMENT_VAR}/g" metrics-dashboard/grafana/configs/prometheus-dev.yml
    - cp metrics-dashboard/grafana/configs/prometheus-dev.yml metrics-dashboard/grafana/datasources/prometheus.yml
    - docker build -t ${REPOSITORY_URL}-${MODULE_NAME}:latest -t ${REPOSITORY_URL}-${MODULE_NAME}:${CI_PIPELINE_ID} -f ${MODULE_NAME}/Dockerfile .
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:latest
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${CI_PIPELINE_ID}
  after_script:
    - docker rmi ${REPOSITORY_URL}-${MODULE_NAME}:latest
    - docker rmi ${REPOSITORY_URL}-${MODULE_NAME}:${CI_PIPELINE_ID}
  only:
    refs:
      - master
      - /^*dev/feature/.*$/
      - /^*dev/fix/.*$/

prometheus-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/prometheus
    MODULE_VERSION: ${CI_PIPELINE_ID}
  services:
    - docker:18-dind
  before_script:
    - apk add --no-cache curl jq python py-pip bash
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-east-1)
  script:
    - source ci-utils/environment_assign.sh
    - sed -i "s/ENVIRONMENT/${ENVIRONMENT_VAR}/g" metrics-dashboard/prometheus/configs/prometheus-dev.yml
    - cp metrics-dashboard/prometheus/configs/prometheus-dev.yml metrics-dashboard/prometheus/prometheus.yml
    - docker build -t ${REPOSITORY_URL}-${MODULE_NAME}:latest -t ${REPOSITORY_URL}-${MODULE_NAME}:${CI_PIPELINE_ID} -f ${MODULE_NAME}/Dockerfile .
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:latest
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${CI_PIPELINE_ID}
  after_script:
    - docker rmi ${REPOSITORY_URL}-${MODULE_NAME}:latest
    - docker rmi ${REPOSITORY_URL}-${MODULE_NAME}:${CI_PIPELINE_ID}
  only:
    refs:
      - master
      - /^*dev/feature/.*$/
      - /^*dev/fix/.*$/

# =======================================================
# Grafana user creation jobs for metrics-dashboard module
# =======================================================
grafana_user_creation_branches:
  stage: grafana_user_creation
  extends: .grafana_user_creation_template
  before_script:
    - export ENVIRONMENT_SLUG=$(echo -n "${CI_COMMIT_REF_SLUG}" | sha256sum | cut -c1-8)
  only:
    refs:
      - /^*dev/feature/.*$/
      - /^*dev/fix/.*$/
  except:
    - master

grafana_user_creation_master:
  stage: grafana_user_creation
  extends: .grafana_user_creation_template
  before_script:
    - export ENVIRONMENT_SLUG=master
  only:
    - master