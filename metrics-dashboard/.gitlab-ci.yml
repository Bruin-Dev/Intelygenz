# ===============================================
# Images builds jobs for metrics-dashboard module
# ===============================================
grafana-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/grafana
    MODULE_VERSION: ${CI_PIPELINE_ID}
  script:
    - sed -i "s/igzpackages==[0-9]+\.[0-9]+\.[0-9]+/igzpackages==${IGZ_PACKAGES_VERSION}/g" ${MODULE_NAME}/requirements.txt
    - cp metrics-dashboard/grafana/config/prometheus-dev.yml metrics-dashboard/grafana/datasources/prometheus.yml
    - docker build --build-arg IGZ_PACKAGES_REPOSITORY_URL --build-arg IGZ_PACKAGES_VERSION --build-arg GRAFANA_ADMIN_USER
      --build-arg GRAFANA_ADMIN_PASSWORD --build-arg GRAFANA_USER_PASSWORD --build-arg GRAFANA_USER_COMPANY --build-arg GRAFANA_USER_ROLE --build-arg GRAFANA_USER_NAME --build-arg GRAFANA_USER_LOGIN
      --build-arg GRAFANA_USER_EMAIL --build-arg GRAFANA_PORT -t ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-latest -t ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION} -f ${MODULE_NAME}/Dockerfile .
    - python3 ci-utils/ecr/manage_ecr_docker_images.py -d True -o True -e ${ENVIRONMENT_VAR} -r automation-${MODULE_NAME} -p True
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-latest
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION}
  rules:
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - metrics-dashboard/grafana/**/*
        - metrics-dashboard/.gitlab-ci.yml
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "web"'
  extends: .build_app_image

prometheus-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/prometheus
    MODULE_VERSION: ${CI_PIPELINE_ID}
  script:
    - source ci-utils/environments/environment_assign.sh
    - docker build -t ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-latest -t ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION} -f ${MODULE_NAME}/Dockerfile .
    - python3 ci-utils/ecr/manage_ecr_docker_images.py -d True -o True -e ${ENVIRONMENT_VAR} -r automation-${MODULE_NAME} -p True
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-latest
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION}
  rules:
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - metrics-dashboard/prometheus/**/*
        - metrics-dashboard/.gitlab-ci.yml
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "web"'
  extends: .build_app_image

thanos-sidecar-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/thanos
    REPOSITORY_NAME: metrics-dashboard/thanos
    MODULE_VERSION: ${CI_PIPELINE_ID}
    GRPC_PORT: 10091
    HTTP_PORT: 10902
  rules:
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - metrics-dashboard/thanos/**/*
        - metrics-dashboard/.gitlab-ci.yml
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "web"'
  extends: .build_thanos_with_config_bucket

thanos-store-gateway-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/thanos
    REPOSITORY_NAME: metrics-dashboard/thanos-store-gateway
    MODULE_VERSION: ${CI_PIPELINE_ID}
    GRPC_PORT: 10901
    HTTP_PORT: 19191
  rules:
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - metrics-dashboard/thanos/**/*
        - metrics-dashboard/.gitlab-ci.yml
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "web"'
  extends: .build_thanos_with_config_bucket

thanos-querier-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/thanos
    REPOSITORY_NAME: metrics-dashboard/thanos-querier
    MODULE_VERSION: ${CI_PIPELINE_ID}
    GRPC_PORT: 10999
    HTTP_PORT: 19091
  script:
    - docker build --build-arg GRPC_PORT=${GRPC_PORT} --build-arg HTTP_PORT=${HTTP_PORT} -t ${REPOSITORY_URL}-${REPOSITORY_NAME}:${ENVIRONMENT_VAR}-latest -t ${REPOSITORY_URL}-${REPOSITORY_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION} -f ${MODULE_NAME}/Dockerfile-thanos_querier .
    - python3 ci-utils/ecr/manage_ecr_docker_images.py -d True -o True -e ${ENVIRONMENT_VAR} -r automation-${REPOSITORY_NAME} -p True
    - docker push ${REPOSITORY_URL}-${REPOSITORY_NAME}:${ENVIRONMENT_VAR}-latest
    - docker push ${REPOSITORY_URL}-${REPOSITORY_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION}
  after_script:
    - source ci-utils/environments/environment_assign.sh
    - docker rmi ${REPOSITORY_URL}-${REPOSITORY_NAME}:${ENVIRONMENT_VAR}-latest
    - docker rmi ${REPOSITORY_URL}-${REPOSITORY_NAME}:${ENVIRONMENT_VAR}-${MODULE_VERSION}
  rules:
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - metrics-dashboard/thanos/**/*
        - metrics-dashboard/.gitlab-ci.yml
    - if: '($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^dev\/(feature|fix)\/.+$/) && $CI_PIPELINE_SOURCE == "web"'
  extends: .build_app_image
