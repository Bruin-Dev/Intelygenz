# ===============================================
# Images builds jobs for metrics-dashboard module
# ===============================================
grafana-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/grafana
    MODULE_VERSION: ${CI_PIPELINE_ID}
  extends: .build_app_image
  script:
    - apk --upgrade --no-cache add python3 py-pip
    - pip3 install --upgrade pyyaml shortuuid
    - source ci-utils/environment_assign.sh
    - sed -i "s/ENVIRONMENT/${ENVIRONMENT_VAR}/g" metrics-dashboard/grafana/configs/prometheus-dev.yml
    - cp metrics-dashboard/grafana/configs/prometheus-dev.yml metrics-dashboard/grafana/datasources/prometheus.yml
    - python3 metrics-dashboard/grafana/scripts/dashboard_generator.py
    - docker build -t ${REPOSITORY_URL}-${MODULE_NAME}:latest -t ${REPOSITORY_URL}-${MODULE_NAME}:${CI_PIPELINE_ID} -f ${MODULE_NAME}/Dockerfile .
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:latest
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${MODULE_VERSION}

prometheus-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/prometheus
    MODULE_VERSION: ${CI_PIPELINE_ID}
  extends: .build_app_image
  script:
    - source ci-utils/environment_assign.sh
    - sed -i "s/ENVIRONMENT/${ENVIRONMENT_VAR}/g" metrics-dashboard/prometheus/configs/prometheus-dev.yml
    - cp metrics-dashboard/prometheus/configs/prometheus-dev.yml metrics-dashboard/prometheus/prometheus.yml
    - docker build -t ${REPOSITORY_URL}-${MODULE_NAME}:latest -t ${REPOSITORY_URL}-${MODULE_NAME}:${CI_PIPELINE_ID} -f ${MODULE_NAME}/Dockerfile .
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:latest
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${MODULE_VERSION}

thanos-sidecar-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/thanos
    MODULE_VERSION: ${CI_PIPELINE_ID}
    GRPC_ADDRESS_PORT: 10091
    HTTP_ADDRESS_PORT: 10902
  extends: .build_app_image
  script:
    - source ci-utils/environment_assign.sh
    - sed -i "s/ENVIRONMENT/${ENVIRONMENT_VAR}/g" metrics-dashboard/thanos/config/bucket_config.yaml
    - cp metrics-dashboard/thanos/config/bucket_config.yaml metrics-dashboard/thanos/bucket_config.yaml
    - docker build --build-arg GRPC_ADDRESS=${GRPC_ADDRESS_PORT} --build-arg HTTP_ADDRESS=${HTTP_ADDRESS_PORT} -t ${REPOSITORY_URL}-${MODULE_NAME}:latest -t ${REPOSITORY_URL}-${MODULE_NAME}:${CI_PIPELINE_ID} -f ${MODULE_NAME}/Dockerfile .
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:latest
    - docker push ${REPOSITORY_URL}-${MODULE_NAME}:${MODULE_VERSION}

thanos-store-gateway-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/thanos
    REPOSITORY_NAME: metrics-dashboard/thanos-store-gateway
    MODULE_VERSION: ${CI_PIPELINE_ID}
    GRPC_ADDRESS_PORT: 10901
    HTTP_ADDRESS_PORT: 19191
  extends: .build_app_image
  script:
    - source ci-utils/environment_assign.sh
    - sed -i "s/ENVIRONMENT/${ENVIRONMENT_VAR}/g" metrics-dashboard/thanos/config/bucket_config.yaml
    - cp metrics-dashboard/thanos/config/bucket_config.yaml metrics-dashboard/thanos/bucket_config.yaml
    - docker build --build-arg GRPC_ADDRESS=${GRPC_ADDRESS_PORT} --build-arg HTTP_ADDRESS=${HTTP_ADDRESS_PORT} -t ${REPOSITORY_URL}-${REPOSITORY_NAME}:latest -t ${REPOSITORY_URL}-${REPOSITORY_NAME}:${CI_PIPELINE_ID} -f ${MODULE_NAME}/Dockerfile .
    - docker push ${REPOSITORY_URL}-${REPOSITORY_NAME}:latest
    - docker push ${REPOSITORY_URL}-${REPOSITORY_NAME}:${MODULE_VERSION}
  after_script:
    - docker rmi ${REPOSITORY_URL}-${REPOSITORY_NAME}:latest
    - docker rmi ${REPOSITORY_URL}-${REPOSITORY_NAME}:${MODULE_VERSION}

thanos-querier-build:
  stage: build
  variables:
    MODULE_NAME: metrics-dashboard/thanos
    REPOSITORY_NAME: metrics-dashboard/thanos-querier
    MODULE_VERSION: ${CI_PIPELINE_ID}
    HTTP_ADDRESS_PORT: 19091
  extends: .build_app_image
  script:
    - docker build --build-arg HTTP_ADDRESS=${HTTP_ADDRESS_PORT} -t ${REPOSITORY_URL}-${REPOSITORY_NAME}:latest -t ${REPOSITORY_URL}-${REPOSITORY_NAME}:${CI_PIPELINE_ID} -f ${MODULE_NAME}/Dockerfile-thanos_querier .
    - docker push ${REPOSITORY_URL}-${REPOSITORY_NAME}:latest
    - docker push ${REPOSITORY_URL}-${REPOSITORY_NAME}:${MODULE_VERSION}
  after_script:
    - docker rmi ${REPOSITORY_URL}-${REPOSITORY_NAME}:latest
    - docker rmi ${REPOSITORY_URL}-${REPOSITORY_NAME}:${MODULE_VERSION}

# =======================================================
# Grafana user creation jobs for metrics-dashboard module
# =======================================================
grafana_user_creation_branches:
  stage: grafana_user_creation
  extends: .grafana_user_creation_template
  before_script:
    - export ENVIRONMENT_SLUG=$(echo -n "${CI_COMMIT_REF_SLUG}" | sha256sum | cut -c1-8)
  only:
    - /^*dev/feature/.*$/
    - /^*dev/fix/.*$/
  except:
    - master

grafana_user_creation_master:
  stage: grafana_user_creation
  extends: .grafana_user_creation_template
  before_script:
    - export ENVIRONMENT_SLUG=master
  only:
    - master