apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hawkeye-customer-cache.fullname" . }}
  labels:
    {{- include "hawkeye-customer-cache.labels" . | nindent 4 }}
  annotations:
    reloader.stakater.com/search: "true"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hawkeye-customer-cache.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "hawkeye-customer-cache.labels" . | nindent 8 }}
      annotations:
        fluentbit.io/parser: mettel_parser_logs
    spec:
      priorityClassName: critical-priority
      initContainers:
        {{- if .Values.config.capabilities_enabled.bruin_bridge }}
        - name: wait-bruin-bridge
          image: busybox:1.28
          command: ['sh', '-c', 'until wget --spider -S http://bruin-bridge:5000/_health; do echo waiting for bruin-bridge; sleep 2; done']
        {{- end }}
        {{- if .Values.config.capabilities_enabled.hawkeye_bridge }}
        - name: wait-hawkeye-bridge
          image: busybox:1.28
          command: ['sh', '-c', 'until wget --spider -S http://hawkeye-bridge:5000/_health; do echo waiting for hawkeye-bridge-bridge; sleep 2; done']
        {{- end }}
        {{- if .Values.config.capabilities_enabled.notifier }}
        - name: wait-notifier
          image: busybox:1.28
          command: ['sh', '-c', 'until wget --spider -S http://notifier:5000/_health; do echo waiting for notifier; sleep 2; done']
        {{- end }}
        - name: wait-redis-customer-cache
          image: busybox:1.28
          command: ['sh', '-c', 'until printf "PING\r\n" | nc ${REDIS_CUSTOMER_CACHE_HOSTNAME} 6379; do echo waiting for redis; sleep 2; done']
          envFrom:
            - configMapRef:
                name: {{ include "hawkeye-customer-cache.configmapName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "automation-master-latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "hawkeye-customer-cache.configmapName" . }}
            - secretRef:
                name: {{ include "hawkeye-customer-cache.secretName" . }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
          readinessProbe:
            httpGet:
              path: /_health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.global.mode "local" }}
      imagePullSecrets:
        - name: {{ .Values.global.ecr_registry.name }}
      {{- end }}
