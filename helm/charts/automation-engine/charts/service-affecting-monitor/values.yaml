# Default values for service-affecting-monitor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of service-affecting-monitor pods
replicaCount: 1

enabled: true

# -- Global configuration
global:
  # -- Name of environment for EKS cluster and network resources
  current_environment: "dev"
  # -- Name of environment for helm charts and
  # redis elasticaches used
  environment: "automation-test"
  # -- NATS cluster endpoint used by bruin-bridge
  nats_server: "nats://nats:4222"
  # -- Redis Hostname used to store heavy NATS messages (>1MB)
  redis_hostname: "redis"
  # -- Redis Hostname used to store information used by customer-cache
  redis_customer_cache_hostname: "redis"
  # -- Redis Hostname used to store metrics obtained from tnba-feedback to train the ML model
  redis_tnba_feedback_hostname: "redis"
  # -- Redis Hostname used to store information used by email-tagger
  redis_email_tagger_hostname: "redis"
  # -- Indicates if the logs will be sent to papertrail or not.
  papertrail_active: "False"
  # -- Papertrail host to which the logs will be sent
  papertrail_host: "logs.papertrailapp.com"
  # -- Papertrail port to which the logs will be sent
  papertrail_port: "0"
  # -- Indicates if the helm chart will be displayed in an aws or local environment,
  # in case it is local, a specific imagePullSecret will be used to access the images stored in ECR.
  mode: "aws"
  ecr_registry:
    # -- Name of the imagePullSecret created to access the images stored in ECR.
    name: "ecr-registry"

config:
  papertrail_prefix: ""
  # -- Indicates if the monitor reports process will be executed on start or not
  exec_monitor_reports_on_start: "False"
  # -- Indicates if the bandwidth reports process will be executed on start or not
  exec_bandwidth_reports_on_start: "False"
  # -- Bruin's product category under monitoring
  monitored_product_category: ""
  # -- [Monitoring] Defines how often devices are checked to find and report issues
  monitoring__monitoring_job_interval: 0
  # -- [Monitoring] VeloCloud hosts whose edges will be monitored
  monitoring__monitored_velocloud_hosts: []
  # -- [Monitoring] Mapping of VeloCloud hosts, Bruin customers and default contact info
  monitoring__default_contact_info_per_customer: {}
  # -- [Monitoring] Threshold for Latency troubles
  monitoring__latency_monitoring_threshold: 0
  # -- [Monitoring] Threshold for Packet Loss troubles
  monitoring__packet_loss_monitoring_threshold: 0
  # -- [Monitoring] Threshold for Jitter troubles
  monitoring__jitter_monitoring_threshold: 0
  # -- [Monitoring] Threshold for Bandwidth Over Utilization troubles
  monitoring__bandwidth_over_utilization_monitoring_threshold: 0
  # -- [Monitoring] Threshold for Circuit Instability troubles
  monitoring__circuit_instability_monitoring_threshold: 0
  # -- [Monitoring] Max DOWN events allowed in Circuit Instability checks while auto-resolving tickets
  monitoring__circuit_instability_autoresolve_threshold: 0
  # -- [Monitoring] Defines how much time back to look for Latency metrics in Latency checks
  monitoring__latency_monitoring_lookup_interval: 0
  # -- [Monitoring] Defines how much time back to look for Packet Loss metrics in Packet Loss checks
  monitoring__packet_loss_monitoring_lookup_interval: 0
  # -- [Monitoring] Defines how much time back to look for Jitter metrics in Jitter checks
  monitoring__jitter_monitoring_lookup_interval: 0
  # -- [Monitoring] Defines how much time back to look for Bandwidth metrics in Bandwidth Over Utilization checks
  monitoring__bandwidth_over_utilization_monitoring_lookup_interval: 0
  # -- [Monitoring] Defines how much time back to look for DOWN events in Circuit Instability checks
  monitoring__circuit_instability_monitoring_lookup_interval: 0
  # -- [Monitoring] Defines how much time back to look for all kinds of metrics while running auto-resolves
  monitoring__autoresolve_lookup_interval: 0
  # -- [Monitoring] Defines for how long a ticket can be auto-resolved after the last documented trouble
  monitoring__grace_period_to_autoresolve_after_last_documented_trouble: 0
  # -- [Monitoring] Defines how many times a ticket can be auto-resolved
  monitoring__max_autoresolves_per_ticket: 0
  # -- [Monitoring] List of client IDs for which Bandwidth Over Utilization checks are enabled
  monitoring__customers_with_bandwidth_over_utilization_monitoring: []
  # -- [Monitoring] List of link labels that are excluded from forwards to the ASR queue
  monitoring__link_labels_blacklisted_in_asr_forwards: []
  metrics:
    # -- Indicates whether the microservice will expose metrics through prometheus.
    enabled: true
    # -- Service for metrics configuration
    svc:
      port: 9090
      name: metrics
    ## Additional labels for the service monitor
    ## in case you use "serviceMonitorNamespaceSelector" in Prometheus CRD
    labels: { }
    #labels:
    #  servicediscovery: true
  capabilities_enabled:
    # -- Indicate if bruin-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # bruin-bridge service responds correctly to healthcheck calls.
    bruin_bridge: true
    # -- Indicate if customer-cache is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # customer-cache service responds correctly to healthcheck calls.
    customer_cache: true
    # -- Indicate if digi-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # digi-bridge service responds correctly to healthcheck calls.
    digi_bridge: true
    # -- Indicate if email-tagger-kre-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # email-tagger-kre-bridge service responds correctly to healthcheck calls.
    email_tagger_kre_bridge: true
    # -- Indicate if hawkeye-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # hawkeye-bridge service responds correctly to healthcheck calls.
    hawkeye_bridge: true
    # -- Indicate if hawkeye-customer-cache is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # hawkeye-customer-cache service responds correctly to healthcheck calls.
    hawkeye_customer_cache: true
    # -- Indicate if notifier is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # notifier service responds correctly to healthcheck calls.
    notifier: true
    # -- Indicate if repair-tickets-kre-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # repair-tickets-kre-bridge service responds correctly to healthcheck calls.
    repair_tickets_kre_bridge: true
    # -- Indicate if t7-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # t7-bridge service responds correctly to healthcheck calls.
    t7_bridge: true
    # -- Indicate if velocloud-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # velocloud-bridge service responds correctly to healthcheck calls.
    velocloud_bridge: true

image:
  repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/service-affecting-monitor
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

service:
  type: ClusterIP
  port: 5000

resources:
  limits:
    cpu: 300m
    memory: 384Mi
  requests:
    cpu: 150m
    memory: 192Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
