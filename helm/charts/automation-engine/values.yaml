# Default values for bruin-bridge.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of bruin-bridge pods to do calls to Bruin API.
# Do not set this below 2 unless is going to deploy in dev or local environment.
replicaCount: 1

# -- nats helm chart configuration
nats:
  cluster:
    enabled: true
  natsbox:
    enabled: false
  # -- override name to use nats as name for svc, deployment and all created by nats helm chart
  nameOverride: "nats"


## YAML anchor to define capabilities_enabled
.capabilitiesEnabled: &capabilitiesEnabled
  capabilities_enabled:
    # -- Indicate if bruin-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # bruin-bridge service responds correctly to healthcheck calls.
    bruin_bridge: true
    # -- Indicate if customer-cache is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # customer-cache service responds correctly to healthcheck calls.
    customer_cache: true
    # -- Indicate if digi-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # digi-bridge service responds correctly to healthcheck calls.
    digi_bridge: true
    # -- Indicate if email-tagger-kre-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # email-tagger-kre-bridge service responds correctly to healthcheck calls.
    email_tagger_kre_bridge: true
    # -- Indicate if hawkeye-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # hawkeye-bridge service responds correctly to healthcheck calls.
    hawkeye_bridge: true
    # -- Indicate if hawkeye-customer-cache is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # hawkeye-customer-cache service responds correctly to healthcheck calls.
    hawkeye_customer_cache: true
    # -- Indicate if notifier is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # notifier service responds correctly to healthcheck calls.
    notifier: true
    # -- Indicate if t7-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # t7-bridge service responds correctly to healthcheck calls.
    t7_bridge: true
    # -- Indicate if velocloud-bridge is going to be activated. If it is true an initContainer
    # will be created in the microservice deployment that will wait until the
    # velocloud-bridge service responds correctly to healthcheck calls.
    velocloud_bridge: true


# -- Global configuration for all subcharts
global:
  # -- Name of environment for EKS cluster and network resources
  current_environment: "dev"
  # -- Name of environment for helm charts and
  # redis elasticaches used
  environment: "automation-test"
  # -- NATS cluster endpoint used by bruin-bridge
  nats_server: "nats://nats:4222"
  # -- Redis Hostname used to store heavy NATS messages (>1MB)
  redis_hostname: "redis"
  # -- Redis Hostname used to store information used by customer-cache
  redis_customer_cache_hostname: "redis"
  # -- Redis Hostname used to store metrics obtained from tnba-feedback to train the ML model
  redis_tnba_feedback_hostname: "redis"
  # -- Redis Hostname used to store information used by email-tagger
  redis_email_tagger_hostname: "redis"
  # -- Indicates if the logs will be sent to papertrail or not.
  papertrail_active: "False"
  # -- Papertrail host to which the logs will be sent
  papertrail_host: "logs.papertrailapp.com"
  # -- Papertrail port to which the logs will be sent
  papertrail_port: "0"
  # -- Contact email address
  last_contact_recipient: ""
  # -- Email account password
  email_acc_pwd: ""
  # -- Indicates if the helm chart will be displayed in an aws or local environment,
  # in case it is local, a specific imagePullSecret will be used to access the images stored in ECR.
  mode: "aws"
  ecr_registry:
    # -- Name of the imagePullSecret created to access the images stored in ECR.
    name: "ecr-registry"


# -- bruin-bridge subchart specific configuration
bruin-bridge:
  # -- Field to indicate if the bruin-bridge module is going to be deployed
  enabled: true
  # -- Number of bruin-bridge pods to do calls to Bruin API.
  # Do not set this below 2 unless is going to deploy in dev or local environment.
  replicaCount: 2
  image:
    # -- Repository image for bruin-bridge module
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/bruin-bridge
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  # -- Service Configuration
  service:
    type: ClusterIP
    port: 5000
  # -- bruin-bridge specific configuration variables
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Client ID credentials for Bruin API
    bruin_client_id: ""
    # -- Client Secret credentials for Bruin API
    bruin_client_secret: ""
    # -- IP of Bruin Login URL (needed only in dev environments)
    bruin_login_url_ip: ""
    # -- Login URL for Bruin API
    bruin_login_url: ""
    # -- Base URL for Bruin API (needed only in dev environments)
    bruin_base_url_ip: ""
    # -- Base URL for Bruin API
    bruin_base_url: ""
  # -- bruin-bridge resource definition
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- customer-cache subchart specific configuration
customer-cache:
  # -- Field to indicate if the customer-cache module is going to be deployed
  enabled: true
  # -- Number of replicas of customer-cache module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/customer-cache
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi


# -- digi-bridge subchart specific configuration
digi-bridge:
  # -- Field to indicate if the digi-bridge module is going to be deployed
  enabled: true
  # -- Number of replicas of digi-bridge module
  replicaCount: 1
  # -- digi-bridge specific configuration variables
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Client ID credentials for Digi API
    digi_client_id: ""
    # -- Client Secret credentials for Digi API
    digi_client_secret: ""
    # -- Base URL for Digi API
    digi_base_url: ""
    # -- IP for Digi Production Environment
    digi_ip_pro: ""
    # -- Record name for Digi Production Environment
    digi_record_name_pro: ""
    # -- IP for Digi Dev Environment
    digi_ip_dev: ""
    # -- Record name for Digi Dev Environment
    digi_record_name_dev: ""
    # -- IP for Digi Test Environment
    digi_ip_test: ""
    # -- Record name for Digi Test Environment
    digi_record_name_test: ""
  # -- digi-bridge image details
  image:
    # -- digi-bridge image image
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/digi-bridge
    pullPolicy: Always
    # -- digi-bridge tag of docker image
    tag: ""
  # -- digi-bridge service details
  service:
    type: ClusterIP
    port: 5000
  # -- digi-bridge resource definition
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # -- digi-bridge autoscaling configuration
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80


# -- digi-reboot-report subchart specific configuration
digi-reboot-report:
  # -- Field to indicate if the digi-reboot-report module is going to be deployed
  enabled: true
  # -- Number of replicas of digi-reboot-report module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    # -- Email address to send digi-reboot-report
    digi_report_recipient: ""
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/digi-reboot-report
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi


# -- ecr-cred-helper subchart specific configuration
ecr-cred-helper:
  enabled: false
  # -- Specific configuration for ecr-cred-helper
  config:
    mode: "aws"
    # -- Secret Access Key of AWS Account
    aws_secret_access_key: ""
    # -- Access Key Id of AWS Account
    aws_access_key_id: ""
    # -- AWS Region of account
    aws_region: "us-east-1"
    # -- awscli version to use for get credentials
    awscli_version: "1.16.257"
    # -- Kubectl version
    kubectl_version: "1.17.0"
    ecr_registry:
      url: ""
      password: ""
      name: "ecr-registry"
    schedule_expr: "0 */6 * * *"
  image:
    repository: alpine
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "3.12.0"
  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "sa-ecr-cred-helper"
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- email-tagger-kre-bridge subchart specific configuration
email-tagger-kre-bridge:
  # -- Field to indicate if the email-tagger-kre-bridge module is going to be deployed
  enabled: true
  # -- Number of replicas of email-tagger-kre-bridge module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Base URL for KRE API
    kre_base_url: ""
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/email-tagger-kre-bridge
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # -- email-tagger-kre-bridge autoscaling configuration
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80


# -- email-tagger-monitor subchart specific configuration
email-tagger-monitor:
  # -- Field to indicate if the email-tagger-monitor module is going to be deployed
  enabled: true
  # -- Number of replicas of email-tagger-monitor module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    # -- Redis chache for email-tagger
    redis_cache_hostname: ""
    # -- Signature secret key
    request_signature_secret_key: ""
    # -- Request api key
    request_api_key: ""
    # -- API server endpoint prefix
    api_server_endpoint_prefix: "/api/email-tagger-webhook"
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/email-tagger-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi


# -- hawkeye-affecting-monitor subchart specific configuration
hawkeye-affecting-monitor:
  # -- Field to indicate if the hawkeye-affecting-monitor module is going to be deployed
  enabled: true
  # -- Number of replicas of hawkeye-affecting-monitor module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/hawkeye-affecting-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi


# -- hawkeye-bridge subchart specific configuration
hawkeye-bridge:
  # -- Field to indicate if the hawkeye-bridge module is going to be deployed
  enabled: true
  # -- Number of replicas of hawkeye-bridge module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    hawkeye_client_username: ""
    # -- Client password credentials for Hawkeye API
    hawkeye_client_password: ""
    ## -- Base URL for Hawkeye API
    hawkeye_base_url: ""
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/hawkeye-bridge
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # -- hawkeye-bridge autoscaling configuration
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80


# -- hawkeye-customer-cache subchart specific configuration
hawkeye-customer-cache:
  # -- Field to indicate if the hawkeye-customer-cache module is going to be deployed
  enabled: true
  # -- Number of replicas of hawkeye-customer-cache module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/hawkeye-customer-cache
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi


# -- hawkeye-outage-monitor subchart specific configuration
hawkeye-outage-monitor:
  # -- Field to indicate if the hawkeye-outage-monitor module is going to be deployed
  enabled: true
  # -- Number of replicas of hawkeye-outage-monitor module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/hawkeye-outage-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- intermapper-outage-monitor subchart specific configuration
intermapper-outage-monitor:
  # -- Field to indicate if the intermapper-outage-monitor module is going to be deployed
  enabled: true
  # -- Number of replicas of intermapper-outage-monitor module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/intermapper-outage-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- last-contact-report subchart specific configuration
last-contact-report:
  # -- Field to indicate if the last-contact-report module is going to be deployed
  enabled: true
  # -- Number of replicas of last-contact-report module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/last-contact-report
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- links-metrics-api subchart specific configuration
links-metrics-api:
  enabled: true
  # -- Number of links-metrics-api pods
  replicaCount: 1
  config:
    papertrail_prefix: ""
    # -- Indicate mongo username
    mongodb_username: ""
    # -- Indicate mongo password
    mongodb_password: ""
    # -- Indicate mongo hostname
    mongodb_host: ""
    # -- Indicate mongo port to use
    mongodb_port: ""
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/links-metrics-api
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: LoadBalancer
    port: 5000
    securityGroup: ""
    awsCertArn: ""
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi


# -- links-metrics-collector subchart specific configuration
links-metrics-collector:
  enabled: true
  # -- Number of links-metrics-collector pods
  replicaCount: 1
  config:
    papertrail_prefix: ""
    # -- Indicate mongo username
    mongodb_username: ""
    # -- Indicate mongo password
    mongodb_password: ""
    # -- Indicate mongo hostname
    mongodb_host: ""
    # -- Indicate mongo port to use
    mongodb_port: ""
    # -- Indicate the whitelist source range CIDR to allow access
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/links-metrics-collector
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi


# -- lumin-billing-report subchart specific configuration
lumin-billing-report:
  # -- Field to indicate if the lumin-billing-report module is going to be deployed
  enabled: true
  # -- Number of replicas of lumin-billing-report module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- URI of Lumin API
    lumin_uri: ""
    # -- Token credentials for Lumin API
    lumin_token: ""
    # -- Name of customer to generate lumin-billing-report
    customer_name: ""
    # -- Email address to send lumin-billing-report
    billing_recipient: ""
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/lumin-billing-report
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- notifier subchart specific configuration
notifier:
  # -- Field to indicate if the notifier module is going to be deployed
  enabled: true
  # -- Number of replicas of notifier module
  replicaCount: 1
  # -- notifier image details
  image:
    # -- notifier repository for docker images
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/notifier
    pullPolicy: Always
    # -- notifier tag of docker image
    tag: ""
  # -- notifier Service Configuration
  service:
    type: ClusterIP
    port: 5000
  # -- notifier specific configuration variables
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Slack Webhook URL to send messages
    slack_url: ""
    # -- Telestax URL
    telestax_url: ""
    # -- Telestax account SID
    telestax_account_sid: ""
    # -- Telestax auth token credentials
    telestax_auth_token: ""
    telestax_from_phone_number: ""
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # -- notifier autoscaling configuration
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

# -- repair-tickets-monitor subchart specific configuration
repair-tickets-monitor:
  # -- Field to indicate if the repair-tickets-monitor module is going to be deployed
  enabled: true
  # -- Number of replicas of repair-tickets-monitor module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    metrics:
      # -- Indicates whether the microservice will expose metrics through prometheus.
      enabled: true
      svc:
        port: 9090
        name: metrics
      ## Additional labels for the service monitor
      ## in case you use "serviceMonitorNamespaceSelector" in Prometheus CRD
      labels: {}
      #labels:
      #  servicediscovery: true
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/repair-tickets-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 150m
      memory: 192Mi


# -- service-affecting-monitor subchart specific configuration
service-affecting-monitor:
  # -- Field to indicate if the service-affecting-monitor module is going to be deployed
  enabled: true
  # -- Number of replicas of service-affecting-monitor module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    metrics:
      # -- Indicates whether the microservice will expose metrics through prometheus.
      enabled: true
      svc:
        port: 9090
        name: metrics
      ## Additional labels for the service monitor
      ## in case you use "serviceMonitorNamespaceSelector" in Prometheus CRD
      labels: {}
      #labels:
      #  servicediscovery: true
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/service-affecting-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 150m
      memory: 192Mi


# -- service-outage-monitor-1 subchart specific configuration
service-outage-monitor-1:
  # -- Field to indicate if the service-outage-monitor-1 module is going to be deployed
  enabled: true
  # -- Number of replicas of service-outage-monitor-1 module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    metrics:
      # -- Indicates whether the microservice will expose metrics through prometheus.
      enabled: true
      svc:
        port: 9090
        name: metrics
      ## Additional labels for the service monitor
      ## in case you use "serviceMonitorNamespaceSelector" in Prometheus CRD
      labels: {}
      #labels:
      #  servicediscovery: true
    enable_triage_monitoring: "0"
    # -- Velocloud hosts
    velocloud_hosts: "host1"
    # -- Filter for Velocloud hosts
    velocloud_hosts_filter: "host1_filter"
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/service-outage-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 150m
      memory: 192Mi


# -- service-outage-monitor-2 subchart specific configuration
service-outage-monitor-2:
  # -- Field to indicate if the service-outage-monitor-2 module is going to be deployed
  enabled: true
  # -- Number of replicas of service-outage-monitor-2 module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    metrics:
      # -- Indicates whether the microservice will expose metrics through prometheus.
      enabled: true
      svc:
        port: 9090
        name: metrics
      ## Additional labels for the service monitor
      ## in case you use "serviceMonitorNamespaceSelector" in Prometheus CRD
      labels: {}
      #labels:
      #  servicediscovery: true
    enable_triage_monitoring: "0"
    # -- Velocloud hosts
    velocloud_hosts: "host2"
    # -- Filter for Velocloud hosts
    velocloud_hosts_filter: "host2_filter"
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/service-outage-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- service-outage-monitor-3 subchart specific configuration
service-outage-monitor-3:
  # -- Field to indicate if the service-outage-monitor-3 module is going to be deployed
  enabled: true
  # -- Number of replicas of service-outage-monitor-3 module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    metrics:
      # -- Indicates whether the microservice will expose metrics through prometheus.
      enabled: true
      svc:
        port: 9090
        name: metrics
      ## Additional labels for the service monitor
      ## in case you use "serviceMonitorNamespaceSelector" in Prometheus CRD
      labels: {}
      #labels:
      #  servicediscovery: true
    enable_triage_monitoring: "0"
    # -- Velocloud hosts
    velocloud_hosts: "host1"
    # -- Filter for Velocloud hosts
    velocloud_hosts_filter: "host1_filter"
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/service-outage-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 150m
      memory: 192Mi


# -- service-outage-monitor-4 subchart specific configuration
service-outage-monitor-4:
  # -- Field to indicate if the service-outage-monitor-4 module is going to be deployed
  enabled: true
  # -- Number of replicas of service-outage-monitor-4 module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    metrics:
      # -- Indicates whether the microservice will expose metrics through prometheus.
      enabled: true
      svc:
        port: 9090
        name: metrics
      ## Additional labels for the service monitor
      ## in case you use "serviceMonitorNamespaceSelector" in Prometheus CRD
      labels: {}
      #labels:
      #  servicediscovery: true
    enable_triage_monitoring: "0"
    # -- Velocloud hosts
    velocloud_hosts: "host1"
    # -- Filter for Velocloud hosts
    velocloud_hosts_filter: "host1_filter"
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/service-outage-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- service-outage-monitor-triage subchart specific configuration
service-outage-monitor-triage:
  # -- Field to indicate if the service-outage-monitor-triage module is going to be deployed
  enabled: true
  # -- Number of replicas of service-outage-monitor-triage module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    metrics:
      # -- Indicates whether the microservice will expose metrics through prometheus.
      enabled: true
      svc:
        port: 9090
        name: metrics
      ## Additional labels for the service monitor
      ## in case you use "serviceMonitorNamespaceSelector" in Prometheus CRD
      labels: {}
      #labels:
      #  servicediscovery: true
    enable_triage_monitoring: "1"
    # -- Velocloud hosts
    velocloud_hosts: ""
    # -- Filter for Velocloud hosts
    velocloud_hosts_filter: ""
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/service-outage-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 150m
      memory: 192Mi


# -- sites-monitor subchart specific configuration
sites-monitor:
  # -- Field to indicate if the sites-monitor module is going to be deployed
  enabled: true
  # -- Number of replicas of sites-monitor module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
    metrics:
      # -- Indicates whether the microservice will expose metrics through prometheus.
      enabled: true
      svc:
        port: 9090
        name: metrics
    # -- Period in second for do monitoring process
    monitoring_seconds: ""
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/sites-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- t7-bridge subchart specific configuration
t7-bridge:
  # -- Field to indicate if the t7-bridge module is going to be deployed
  enabled: true
  # -- Number of replicas of t7-bridge module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- KRE Base URL to make calls for get tickets predictions
    kre_base_url: ""
    # -- Base URL for T7 API
    t7_base_url: ""
    ## -- Token credentials for T7 API
    t7_token: ""
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/t7-bridge
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # -- t7-bridge autoscaling configuration
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80


# -- ticket-collector subchart specific configuration
ticket-collector:
  # -- Field to indicate if the ticket-collector module is going to be deployed
  enabled: true
  # -- Number of replicas of ticket-collector module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the interval task that must run in parallel
    interval_tasks_run: ""
    # -- Indicate mongo username
    mongodb_username: ""
    # -- Indicate mongo password
    mongodb_password: ""
    # -- Indicate mongo hostname
    mongodb_host: ""
    # -- Indicate mongo database to use
    mongodb_database: ""
    # -- Indicate bruin client id to access
    bruin_client_id: ""
    # -- Indicate bruin client secret
    bruin_client_secret: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/ticket-collector
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- ticket-statistics subchart specific configuration
ticket-statistics:
  # -- Field to indicate if the ticket-statistics module is going to be deployed
  enabled: true
  # -- Number of replicas of ticket-statistics module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate mongo username
    mongodb_username: ""
    # -- Indicate mongo password
    mongodb_password: ""
    # -- Indicate mongo hostname
    mongodb_host: ""
    # -- Indicate mongo database to use
    mongodb_database: ""
    # -- Indicate ticket statistics server port
    server_port: ""
    # -- Indicate ticket statistics server root path
    server_root_path: ""
    # -- Indicate ticket statistics server version
    server_version: ""
    # -- Indicate ticket statistics server name
    server_name: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/ticket-statistics
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- tnba-feedback subchart specific configuration
tnba-feedback:
  # -- Field to indicate if the tnba-feedback module is going to be deployed
  enabled: true
  # -- Number of replicas of tnba-feedback module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/tnba-feedback
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- tnba-monitor subchart specific configuration
tnba-monitor:
  # -- Field to indicate if the tnba-monitor module is going to be deployed
  enabled: true
  # -- Number of replicas of tnba-monitor module
  replicaCount: 1
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Indicate the capabilities dependencies
    <<: *capabilitiesEnabled
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/tnba-monitor
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi


# -- velocloud-bridge subchart specific configuration
velocloud-bridge:
  # -- Field to indicate if the velocloud-bridge module is going to be deployed
  enabled: true
  # -- Number of replicas of velocloud-bridge module
  replicaCount: 2
  config:
    # -- Papertrail prefix for create logs definition
    papertrail_prefix: ""
    # -- Velocloud credentials
    velocloud_credentials: ""
  image:
    repository: 374050862540.dkr.ecr.us-east-1.amazonaws.com/velocloud-bridge
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 5000
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # -- velocloud-bridge autoscaling configuration
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
