# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class EdgeDeviceSettingsDataBgp(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, ASN=None, connectedRoutes=None, disableASPathCarryOver=None, enabled=None, filters=None, holdtime=None, keepalive=None, neighbors=None, networks=None, overlayPrefix=None, propagateUplink=None, routerId=None, uplinkCommunity=None):
        """
        EdgeDeviceSettingsDataBgp - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'ASN': 'str',
            'connectedRoutes': 'bool',
            'disableASPathCarryOver': 'bool',
            'enabled': 'bool',
            'filters': 'list[EdgeDeviceSettingsDataBgpFilters]',
            'holdtime': 'str',
            'keepalive': 'str',
            'neighbors': 'list[ConfigEdgeBgpNeighbor]',
            'networks': 'list[EdgeDeviceSettingsDataBgpNetworks]',
            'overlayPrefix': 'bool',
            'propagateUplink': 'bool',
            'routerId': 'str',
            'uplinkCommunity': 'int'
        }

        self.attribute_map = {
            'ASN': 'ASN',
            'connectedRoutes': 'connectedRoutes',
            'disableASPathCarryOver': 'disableASPathCarryOver',
            'enabled': 'enabled',
            'filters': 'filters',
            'holdtime': 'holdtime',
            'keepalive': 'keepalive',
            'neighbors': 'neighbors',
            'networks': 'networks',
            'overlayPrefix': 'overlayPrefix',
            'propagateUplink': 'propagateUplink',
            'routerId': 'routerId',
            'uplinkCommunity': 'uplinkCommunity'
        }

        self._ASN = ASN
        self._connectedRoutes = connectedRoutes
        self._disableASPathCarryOver = disableASPathCarryOver
        self._enabled = enabled
        self._filters = filters
        self._holdtime = holdtime
        self._keepalive = keepalive
        self._neighbors = neighbors
        self._networks = networks
        self._overlayPrefix = overlayPrefix
        self._propagateUplink = propagateUplink
        self._routerId = routerId
        self._uplinkCommunity = uplinkCommunity

    @property
    def ASN(self):
        """
        Gets the ASN of this EdgeDeviceSettingsDataBgp.

        :return: The ASN of this EdgeDeviceSettingsDataBgp.
        :rtype: str
        """
        return self._ASN

    @ASN.setter
    def ASN(self, ASN):
        """
        Sets the ASN of this EdgeDeviceSettingsDataBgp.

        :param ASN: The ASN of this EdgeDeviceSettingsDataBgp.
        :type: str
        """

        self._ASN = ASN

    @property
    def connectedRoutes(self):
        """
        Gets the connectedRoutes of this EdgeDeviceSettingsDataBgp.

        :return: The connectedRoutes of this EdgeDeviceSettingsDataBgp.
        :rtype: bool
        """
        return self._connectedRoutes

    @connectedRoutes.setter
    def connectedRoutes(self, connectedRoutes):
        """
        Sets the connectedRoutes of this EdgeDeviceSettingsDataBgp.

        :param connectedRoutes: The connectedRoutes of this EdgeDeviceSettingsDataBgp.
        :type: bool
        """

        self._connectedRoutes = connectedRoutes

    @property
    def disableASPathCarryOver(self):
        """
        Gets the disableASPathCarryOver of this EdgeDeviceSettingsDataBgp.

        :return: The disableASPathCarryOver of this EdgeDeviceSettingsDataBgp.
        :rtype: bool
        """
        return self._disableASPathCarryOver

    @disableASPathCarryOver.setter
    def disableASPathCarryOver(self, disableASPathCarryOver):
        """
        Sets the disableASPathCarryOver of this EdgeDeviceSettingsDataBgp.

        :param disableASPathCarryOver: The disableASPathCarryOver of this EdgeDeviceSettingsDataBgp.
        :type: bool
        """

        self._disableASPathCarryOver = disableASPathCarryOver

    @property
    def enabled(self):
        """
        Gets the enabled of this EdgeDeviceSettingsDataBgp.

        :return: The enabled of this EdgeDeviceSettingsDataBgp.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """
        Sets the enabled of this EdgeDeviceSettingsDataBgp.

        :param enabled: The enabled of this EdgeDeviceSettingsDataBgp.
        :type: bool
        """

        self._enabled = enabled

    @property
    def filters(self):
        """
        Gets the filters of this EdgeDeviceSettingsDataBgp.

        :return: The filters of this EdgeDeviceSettingsDataBgp.
        :rtype: list[EdgeDeviceSettingsDataBgpFilters]
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """
        Sets the filters of this EdgeDeviceSettingsDataBgp.

        :param filters: The filters of this EdgeDeviceSettingsDataBgp.
        :type: list[EdgeDeviceSettingsDataBgpFilters]
        """

        self._filters = filters

    @property
    def holdtime(self):
        """
        Gets the holdtime of this EdgeDeviceSettingsDataBgp.

        :return: The holdtime of this EdgeDeviceSettingsDataBgp.
        :rtype: str
        """
        return self._holdtime

    @holdtime.setter
    def holdtime(self, holdtime):
        """
        Sets the holdtime of this EdgeDeviceSettingsDataBgp.

        :param holdtime: The holdtime of this EdgeDeviceSettingsDataBgp.
        :type: str
        """

        self._holdtime = holdtime

    @property
    def keepalive(self):
        """
        Gets the keepalive of this EdgeDeviceSettingsDataBgp.

        :return: The keepalive of this EdgeDeviceSettingsDataBgp.
        :rtype: str
        """
        return self._keepalive

    @keepalive.setter
    def keepalive(self, keepalive):
        """
        Sets the keepalive of this EdgeDeviceSettingsDataBgp.

        :param keepalive: The keepalive of this EdgeDeviceSettingsDataBgp.
        :type: str
        """

        self._keepalive = keepalive

    @property
    def neighbors(self):
        """
        Gets the neighbors of this EdgeDeviceSettingsDataBgp.

        :return: The neighbors of this EdgeDeviceSettingsDataBgp.
        :rtype: list[ConfigEdgeBgpNeighbor]
        """
        return self._neighbors

    @neighbors.setter
    def neighbors(self, neighbors):
        """
        Sets the neighbors of this EdgeDeviceSettingsDataBgp.

        :param neighbors: The neighbors of this EdgeDeviceSettingsDataBgp.
        :type: list[ConfigEdgeBgpNeighbor]
        """

        self._neighbors = neighbors

    @property
    def networks(self):
        """
        Gets the networks of this EdgeDeviceSettingsDataBgp.

        :return: The networks of this EdgeDeviceSettingsDataBgp.
        :rtype: list[EdgeDeviceSettingsDataBgpNetworks]
        """
        return self._networks

    @networks.setter
    def networks(self, networks):
        """
        Sets the networks of this EdgeDeviceSettingsDataBgp.

        :param networks: The networks of this EdgeDeviceSettingsDataBgp.
        :type: list[EdgeDeviceSettingsDataBgpNetworks]
        """

        self._networks = networks

    @property
    def overlayPrefix(self):
        """
        Gets the overlayPrefix of this EdgeDeviceSettingsDataBgp.

        :return: The overlayPrefix of this EdgeDeviceSettingsDataBgp.
        :rtype: bool
        """
        return self._overlayPrefix

    @overlayPrefix.setter
    def overlayPrefix(self, overlayPrefix):
        """
        Sets the overlayPrefix of this EdgeDeviceSettingsDataBgp.

        :param overlayPrefix: The overlayPrefix of this EdgeDeviceSettingsDataBgp.
        :type: bool
        """

        self._overlayPrefix = overlayPrefix

    @property
    def propagateUplink(self):
        """
        Gets the propagateUplink of this EdgeDeviceSettingsDataBgp.

        :return: The propagateUplink of this EdgeDeviceSettingsDataBgp.
        :rtype: bool
        """
        return self._propagateUplink

    @propagateUplink.setter
    def propagateUplink(self, propagateUplink):
        """
        Sets the propagateUplink of this EdgeDeviceSettingsDataBgp.

        :param propagateUplink: The propagateUplink of this EdgeDeviceSettingsDataBgp.
        :type: bool
        """

        self._propagateUplink = propagateUplink

    @property
    def routerId(self):
        """
        Gets the routerId of this EdgeDeviceSettingsDataBgp.

        :return: The routerId of this EdgeDeviceSettingsDataBgp.
        :rtype: str
        """
        return self._routerId

    @routerId.setter
    def routerId(self, routerId):
        """
        Sets the routerId of this EdgeDeviceSettingsDataBgp.

        :param routerId: The routerId of this EdgeDeviceSettingsDataBgp.
        :type: str
        """

        self._routerId = routerId

    @property
    def uplinkCommunity(self):
        """
        Gets the uplinkCommunity of this EdgeDeviceSettingsDataBgp.

        :return: The uplinkCommunity of this EdgeDeviceSettingsDataBgp.
        :rtype: int
        """
        return self._uplinkCommunity

    @uplinkCommunity.setter
    def uplinkCommunity(self, uplinkCommunity):
        """
        Sets the uplinkCommunity of this EdgeDeviceSettingsDataBgp.

        :param uplinkCommunity: The uplinkCommunity of this EdgeDeviceSettingsDataBgp.
        :type: int
        """

        self._uplinkCommunity = uplinkCommunity

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, EdgeDeviceSettingsDataBgp):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
