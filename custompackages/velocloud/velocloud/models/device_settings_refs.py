# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DeviceSettingsRefs(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, deviceSettingssegment=None, deviceSettingsdnsprimaryProvider=None, deviceSettingsdnsbackupProvider=None, deviceSettingsdnsprivateProviders=None, deviceSettingslanallocation=None, deviceSettingstacacs=None):
        """
        DeviceSettingsRefs - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'deviceSettingssegment': 'object',
            'deviceSettingsdnsprimaryProvider': 'object',
            'deviceSettingsdnsbackupProvider': 'object',
            'deviceSettingsdnsprivateProviders': 'object',
            'deviceSettingslanallocation': 'object',
            'deviceSettingstacacs': 'object'
        }

        self.attribute_map = {
            'deviceSettingssegment': 'deviceSettings:segment',
            'deviceSettingsdnsprimaryProvider': 'deviceSettings:dns:primaryProvider',
            'deviceSettingsdnsbackupProvider': 'deviceSettings:dns:backupProvider',
            'deviceSettingsdnsprivateProviders': 'deviceSettings:dns:privateProviders',
            'deviceSettingslanallocation': 'deviceSettings:lan:allocation',
            'deviceSettingstacacs': 'deviceSettings:tacacs'
        }

        self._deviceSettingssegment = deviceSettingssegment
        self._deviceSettingsdnsprimaryProvider = deviceSettingsdnsprimaryProvider
        self._deviceSettingsdnsbackupProvider = deviceSettingsdnsbackupProvider
        self._deviceSettingsdnsprivateProviders = deviceSettingsdnsprivateProviders
        self._deviceSettingslanallocation = deviceSettingslanallocation
        self._deviceSettingstacacs = deviceSettingstacacs

    @property
    def deviceSettingssegment(self):
        """
        Gets the deviceSettingssegment of this DeviceSettingsRefs.

        :return: The deviceSettingssegment of this DeviceSettingsRefs.
        :rtype: object
        """
        return self._deviceSettingssegment

    @deviceSettingssegment.setter
    def deviceSettingssegment(self, deviceSettingssegment):
        """
        Sets the deviceSettingssegment of this DeviceSettingsRefs.

        :param deviceSettingssegment: The deviceSettingssegment of this DeviceSettingsRefs.
        :type: object
        """

        self._deviceSettingssegment = deviceSettingssegment

    @property
    def deviceSettingsdnsprimaryProvider(self):
        """
        Gets the deviceSettingsdnsprimaryProvider of this DeviceSettingsRefs.

        :return: The deviceSettingsdnsprimaryProvider of this DeviceSettingsRefs.
        :rtype: object
        """
        return self._deviceSettingsdnsprimaryProvider

    @deviceSettingsdnsprimaryProvider.setter
    def deviceSettingsdnsprimaryProvider(self, deviceSettingsdnsprimaryProvider):
        """
        Sets the deviceSettingsdnsprimaryProvider of this DeviceSettingsRefs.

        :param deviceSettingsdnsprimaryProvider: The deviceSettingsdnsprimaryProvider of this DeviceSettingsRefs.
        :type: object
        """

        self._deviceSettingsdnsprimaryProvider = deviceSettingsdnsprimaryProvider

    @property
    def deviceSettingsdnsbackupProvider(self):
        """
        Gets the deviceSettingsdnsbackupProvider of this DeviceSettingsRefs.

        :return: The deviceSettingsdnsbackupProvider of this DeviceSettingsRefs.
        :rtype: object
        """
        return self._deviceSettingsdnsbackupProvider

    @deviceSettingsdnsbackupProvider.setter
    def deviceSettingsdnsbackupProvider(self, deviceSettingsdnsbackupProvider):
        """
        Sets the deviceSettingsdnsbackupProvider of this DeviceSettingsRefs.

        :param deviceSettingsdnsbackupProvider: The deviceSettingsdnsbackupProvider of this DeviceSettingsRefs.
        :type: object
        """

        self._deviceSettingsdnsbackupProvider = deviceSettingsdnsbackupProvider

    @property
    def deviceSettingsdnsprivateProviders(self):
        """
        Gets the deviceSettingsdnsprivateProviders of this DeviceSettingsRefs.

        :return: The deviceSettingsdnsprivateProviders of this DeviceSettingsRefs.
        :rtype: object
        """
        return self._deviceSettingsdnsprivateProviders

    @deviceSettingsdnsprivateProviders.setter
    def deviceSettingsdnsprivateProviders(self, deviceSettingsdnsprivateProviders):
        """
        Sets the deviceSettingsdnsprivateProviders of this DeviceSettingsRefs.

        :param deviceSettingsdnsprivateProviders: The deviceSettingsdnsprivateProviders of this DeviceSettingsRefs.
        :type: object
        """

        self._deviceSettingsdnsprivateProviders = deviceSettingsdnsprivateProviders

    @property
    def deviceSettingslanallocation(self):
        """
        Gets the deviceSettingslanallocation of this DeviceSettingsRefs.

        :return: The deviceSettingslanallocation of this DeviceSettingsRefs.
        :rtype: object
        """
        return self._deviceSettingslanallocation

    @deviceSettingslanallocation.setter
    def deviceSettingslanallocation(self, deviceSettingslanallocation):
        """
        Sets the deviceSettingslanallocation of this DeviceSettingsRefs.

        :param deviceSettingslanallocation: The deviceSettingslanallocation of this DeviceSettingsRefs.
        :type: object
        """

        self._deviceSettingslanallocation = deviceSettingslanallocation

    @property
    def deviceSettingstacacs(self):
        """
        Gets the deviceSettingstacacs of this DeviceSettingsRefs.

        :return: The deviceSettingstacacs of this DeviceSettingsRefs.
        :rtype: object
        """
        return self._deviceSettingstacacs

    @deviceSettingstacacs.setter
    def deviceSettingstacacs(self, deviceSettingstacacs):
        """
        Sets the deviceSettingstacacs of this DeviceSettingsRefs.

        :param deviceSettingstacacs: The deviceSettingstacacs of this DeviceSettingsRefs.
        :type: object
        """

        self._deviceSettingstacacs = deviceSettingstacacs

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DeviceSettingsRefs):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
