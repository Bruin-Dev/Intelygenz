# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class EnterpriseupdateEnterpriseRouteConfigurationData(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, edge=None, hub=None, partnerGateway=None, routingPreference=None):
        """
        EnterpriseupdateEnterpriseRouteConfigurationData - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'edge': 'EnterpriseupdateEnterpriseRouteConfigurationDataEdge',
            'hub': 'EnterpriseupdateEnterpriseRouteConfigurationDataEdge',
            'partnerGateway': 'EnterpriseupdateEnterpriseRouteConfigurationDataPartnerGateway',
            'routingPreference': 'list[EnterpriseupdateEnterpriseRouteConfigurationDataRoutingPreference]'
        }

        self.attribute_map = {
            'edge': 'edge',
            'hub': 'hub',
            'partnerGateway': 'partnerGateway',
            'routingPreference': 'routingPreference'
        }

        self._edge = edge
        self._hub = hub
        self._partnerGateway = partnerGateway
        self._routingPreference = routingPreference

    @property
    def edge(self):
        """
        Gets the edge of this EnterpriseupdateEnterpriseRouteConfigurationData.

        :return: The edge of this EnterpriseupdateEnterpriseRouteConfigurationData.
        :rtype: EnterpriseupdateEnterpriseRouteConfigurationDataEdge
        """
        return self._edge

    @edge.setter
    def edge(self, edge):
        """
        Sets the edge of this EnterpriseupdateEnterpriseRouteConfigurationData.

        :param edge: The edge of this EnterpriseupdateEnterpriseRouteConfigurationData.
        :type: EnterpriseupdateEnterpriseRouteConfigurationDataEdge
        """

        self._edge = edge

    @property
    def hub(self):
        """
        Gets the hub of this EnterpriseupdateEnterpriseRouteConfigurationData.

        :return: The hub of this EnterpriseupdateEnterpriseRouteConfigurationData.
        :rtype: EnterpriseupdateEnterpriseRouteConfigurationDataEdge
        """
        return self._hub

    @hub.setter
    def hub(self, hub):
        """
        Sets the hub of this EnterpriseupdateEnterpriseRouteConfigurationData.

        :param hub: The hub of this EnterpriseupdateEnterpriseRouteConfigurationData.
        :type: EnterpriseupdateEnterpriseRouteConfigurationDataEdge
        """

        self._hub = hub

    @property
    def partnerGateway(self):
        """
        Gets the partnerGateway of this EnterpriseupdateEnterpriseRouteConfigurationData.

        :return: The partnerGateway of this EnterpriseupdateEnterpriseRouteConfigurationData.
        :rtype: EnterpriseupdateEnterpriseRouteConfigurationDataPartnerGateway
        """
        return self._partnerGateway

    @partnerGateway.setter
    def partnerGateway(self, partnerGateway):
        """
        Sets the partnerGateway of this EnterpriseupdateEnterpriseRouteConfigurationData.

        :param partnerGateway: The partnerGateway of this EnterpriseupdateEnterpriseRouteConfigurationData.
        :type: EnterpriseupdateEnterpriseRouteConfigurationDataPartnerGateway
        """

        self._partnerGateway = partnerGateway

    @property
    def routingPreference(self):
        """
        Gets the routingPreference of this EnterpriseupdateEnterpriseRouteConfigurationData.

        :return: The routingPreference of this EnterpriseupdateEnterpriseRouteConfigurationData.
        :rtype: list[EnterpriseupdateEnterpriseRouteConfigurationDataRoutingPreference]
        """
        return self._routingPreference

    @routingPreference.setter
    def routingPreference(self, routingPreference):
        """
        Sets the routingPreference of this EnterpriseupdateEnterpriseRouteConfigurationData.

        :param routingPreference: The routingPreference of this EnterpriseupdateEnterpriseRouteConfigurationData.
        :type: list[EnterpriseupdateEnterpriseRouteConfigurationDataRoutingPreference]
        """

        self._routingPreference = routingPreference

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, EnterpriseupdateEnterpriseRouteConfigurationData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
