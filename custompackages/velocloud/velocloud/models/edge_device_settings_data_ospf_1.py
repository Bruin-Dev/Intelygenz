# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class EdgeDeviceSettingsDataOspf1(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, area=None, authentication=None, authId=None, authPassphrase=None, cost=None, deadTimer=None, enabled=None, helloTimer=None, inboundRouteLearning=None, md5Authentication=None, MTU=None, outboundRouteAdvertisement=None, passive=None):
        """
        EdgeDeviceSettingsDataOspf1 - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'area': 'int',
            'authentication': 'bool',
            'authId': 'int',
            'authPassphrase': 'str',
            'cost': 'int',
            'deadTimer': 'int',
            'enabled': 'bool',
            'helloTimer': 'int',
            'inboundRouteLearning': 'EdgeDeviceSettingsDataOspfInboundRouteLearning',
            'md5Authentication': 'bool',
            'MTU': 'int',
            'outboundRouteAdvertisement': 'EdgeDeviceSettingsDataOspfInboundRouteLearning',
            'passive': 'bool'
        }

        self.attribute_map = {
            'area': 'area',
            'authentication': 'authentication',
            'authId': 'authId',
            'authPassphrase': 'authPassphrase',
            'cost': 'cost',
            'deadTimer': 'deadTimer',
            'enabled': 'enabled',
            'helloTimer': 'helloTimer',
            'inboundRouteLearning': 'inboundRouteLearning',
            'md5Authentication': 'md5Authentication',
            'MTU': 'MTU',
            'outboundRouteAdvertisement': 'outboundRouteAdvertisement',
            'passive': 'passive'
        }

        self._area = area
        self._authentication = authentication
        self._authId = authId
        self._authPassphrase = authPassphrase
        self._cost = cost
        self._deadTimer = deadTimer
        self._enabled = enabled
        self._helloTimer = helloTimer
        self._inboundRouteLearning = inboundRouteLearning
        self._md5Authentication = md5Authentication
        self._MTU = MTU
        self._outboundRouteAdvertisement = outboundRouteAdvertisement
        self._passive = passive

    @property
    def area(self):
        """
        Gets the area of this EdgeDeviceSettingsDataOspf1.

        :return: The area of this EdgeDeviceSettingsDataOspf1.
        :rtype: int
        """
        return self._area

    @area.setter
    def area(self, area):
        """
        Sets the area of this EdgeDeviceSettingsDataOspf1.

        :param area: The area of this EdgeDeviceSettingsDataOspf1.
        :type: int
        """

        self._area = area

    @property
    def authentication(self):
        """
        Gets the authentication of this EdgeDeviceSettingsDataOspf1.

        :return: The authentication of this EdgeDeviceSettingsDataOspf1.
        :rtype: bool
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """
        Sets the authentication of this EdgeDeviceSettingsDataOspf1.

        :param authentication: The authentication of this EdgeDeviceSettingsDataOspf1.
        :type: bool
        """

        self._authentication = authentication

    @property
    def authId(self):
        """
        Gets the authId of this EdgeDeviceSettingsDataOspf1.

        :return: The authId of this EdgeDeviceSettingsDataOspf1.
        :rtype: int
        """
        return self._authId

    @authId.setter
    def authId(self, authId):
        """
        Sets the authId of this EdgeDeviceSettingsDataOspf1.

        :param authId: The authId of this EdgeDeviceSettingsDataOspf1.
        :type: int
        """

        self._authId = authId

    @property
    def authPassphrase(self):
        """
        Gets the authPassphrase of this EdgeDeviceSettingsDataOspf1.

        :return: The authPassphrase of this EdgeDeviceSettingsDataOspf1.
        :rtype: str
        """
        return self._authPassphrase

    @authPassphrase.setter
    def authPassphrase(self, authPassphrase):
        """
        Sets the authPassphrase of this EdgeDeviceSettingsDataOspf1.

        :param authPassphrase: The authPassphrase of this EdgeDeviceSettingsDataOspf1.
        :type: str
        """

        self._authPassphrase = authPassphrase

    @property
    def cost(self):
        """
        Gets the cost of this EdgeDeviceSettingsDataOspf1.

        :return: The cost of this EdgeDeviceSettingsDataOspf1.
        :rtype: int
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """
        Sets the cost of this EdgeDeviceSettingsDataOspf1.

        :param cost: The cost of this EdgeDeviceSettingsDataOspf1.
        :type: int
        """

        self._cost = cost

    @property
    def deadTimer(self):
        """
        Gets the deadTimer of this EdgeDeviceSettingsDataOspf1.

        :return: The deadTimer of this EdgeDeviceSettingsDataOspf1.
        :rtype: int
        """
        return self._deadTimer

    @deadTimer.setter
    def deadTimer(self, deadTimer):
        """
        Sets the deadTimer of this EdgeDeviceSettingsDataOspf1.

        :param deadTimer: The deadTimer of this EdgeDeviceSettingsDataOspf1.
        :type: int
        """

        self._deadTimer = deadTimer

    @property
    def enabled(self):
        """
        Gets the enabled of this EdgeDeviceSettingsDataOspf1.

        :return: The enabled of this EdgeDeviceSettingsDataOspf1.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """
        Sets the enabled of this EdgeDeviceSettingsDataOspf1.

        :param enabled: The enabled of this EdgeDeviceSettingsDataOspf1.
        :type: bool
        """

        self._enabled = enabled

    @property
    def helloTimer(self):
        """
        Gets the helloTimer of this EdgeDeviceSettingsDataOspf1.

        :return: The helloTimer of this EdgeDeviceSettingsDataOspf1.
        :rtype: int
        """
        return self._helloTimer

    @helloTimer.setter
    def helloTimer(self, helloTimer):
        """
        Sets the helloTimer of this EdgeDeviceSettingsDataOspf1.

        :param helloTimer: The helloTimer of this EdgeDeviceSettingsDataOspf1.
        :type: int
        """

        self._helloTimer = helloTimer

    @property
    def inboundRouteLearning(self):
        """
        Gets the inboundRouteLearning of this EdgeDeviceSettingsDataOspf1.

        :return: The inboundRouteLearning of this EdgeDeviceSettingsDataOspf1.
        :rtype: EdgeDeviceSettingsDataOspfInboundRouteLearning
        """
        return self._inboundRouteLearning

    @inboundRouteLearning.setter
    def inboundRouteLearning(self, inboundRouteLearning):
        """
        Sets the inboundRouteLearning of this EdgeDeviceSettingsDataOspf1.

        :param inboundRouteLearning: The inboundRouteLearning of this EdgeDeviceSettingsDataOspf1.
        :type: EdgeDeviceSettingsDataOspfInboundRouteLearning
        """

        self._inboundRouteLearning = inboundRouteLearning

    @property
    def md5Authentication(self):
        """
        Gets the md5Authentication of this EdgeDeviceSettingsDataOspf1.

        :return: The md5Authentication of this EdgeDeviceSettingsDataOspf1.
        :rtype: bool
        """
        return self._md5Authentication

    @md5Authentication.setter
    def md5Authentication(self, md5Authentication):
        """
        Sets the md5Authentication of this EdgeDeviceSettingsDataOspf1.

        :param md5Authentication: The md5Authentication of this EdgeDeviceSettingsDataOspf1.
        :type: bool
        """

        self._md5Authentication = md5Authentication

    @property
    def MTU(self):
        """
        Gets the MTU of this EdgeDeviceSettingsDataOspf1.

        :return: The MTU of this EdgeDeviceSettingsDataOspf1.
        :rtype: int
        """
        return self._MTU

    @MTU.setter
    def MTU(self, MTU):
        """
        Sets the MTU of this EdgeDeviceSettingsDataOspf1.

        :param MTU: The MTU of this EdgeDeviceSettingsDataOspf1.
        :type: int
        """

        self._MTU = MTU

    @property
    def outboundRouteAdvertisement(self):
        """
        Gets the outboundRouteAdvertisement of this EdgeDeviceSettingsDataOspf1.

        :return: The outboundRouteAdvertisement of this EdgeDeviceSettingsDataOspf1.
        :rtype: EdgeDeviceSettingsDataOspfInboundRouteLearning
        """
        return self._outboundRouteAdvertisement

    @outboundRouteAdvertisement.setter
    def outboundRouteAdvertisement(self, outboundRouteAdvertisement):
        """
        Sets the outboundRouteAdvertisement of this EdgeDeviceSettingsDataOspf1.

        :param outboundRouteAdvertisement: The outboundRouteAdvertisement of this EdgeDeviceSettingsDataOspf1.
        :type: EdgeDeviceSettingsDataOspfInboundRouteLearning
        """

        self._outboundRouteAdvertisement = outboundRouteAdvertisement

    @property
    def passive(self):
        """
        Gets the passive of this EdgeDeviceSettingsDataOspf1.

        :return: The passive of this EdgeDeviceSettingsDataOspf1.
        :rtype: bool
        """
        return self._passive

    @passive.setter
    def passive(self, passive):
        """
        Sets the passive of this EdgeDeviceSettingsDataOspf1.

        :param passive: The passive of this EdgeDeviceSettingsDataOspf1.
        :type: bool
        """

        self._passive = passive

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, EdgeDeviceSettingsDataOspf1):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
