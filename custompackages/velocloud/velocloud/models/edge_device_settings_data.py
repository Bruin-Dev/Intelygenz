# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class EdgeDeviceSettingsData(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, bgp=None, lan=None, routedInterfaces=None, routes=None, ha=None, dns=None, netflow=None, vqm=None, vrrp=None, snmp=None, multiSourceQos=None, tacacs=None):
        """
        EdgeDeviceSettingsData - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'bgp': 'EdgeDeviceSettingsDataBgp',
            'lan': 'EdgeDeviceSettingsDataLan',
            'routedInterfaces': 'list[EdgeDeviceSettingsDataRoutedInterfaces]',
            'routes': 'EdgeDeviceSettingsDataRoutes',
            'ha': 'EdgeDeviceSettingsDataHa',
            'dns': 'EdgeDeviceSettingsDataDns',
            'netflow': 'EdgeDeviceSettingsDataNetflow',
            'vqm': 'EdgeDeviceSettingsDataVqm',
            'vrrp': 'EdgeDeviceSettingsDataVrrp',
            'snmp': 'EdgeDeviceSettingsDataSnmp',
            'multiSourceQos': 'EdgeDeviceSettingsDataMultiSourceQos',
            'tacacs': 'EdgeDeviceSettingsDataTacacs'
        }

        self.attribute_map = {
            'bgp': 'bgp',
            'lan': 'lan',
            'routedInterfaces': 'routedInterfaces',
            'routes': 'routes',
            'ha': 'ha',
            'dns': 'dns',
            'netflow': 'netflow',
            'vqm': 'vqm',
            'vrrp': 'vrrp',
            'snmp': 'snmp',
            'multiSourceQos': 'multiSourceQos',
            'tacacs': 'tacacs'
        }

        self._bgp = bgp
        self._lan = lan
        self._routedInterfaces = routedInterfaces
        self._routes = routes
        self._ha = ha
        self._dns = dns
        self._netflow = netflow
        self._vqm = vqm
        self._vrrp = vrrp
        self._snmp = snmp
        self._multiSourceQos = multiSourceQos
        self._tacacs = tacacs

    @property
    def bgp(self):
        """
        Gets the bgp of this EdgeDeviceSettingsData.

        :return: The bgp of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataBgp
        """
        return self._bgp

    @bgp.setter
    def bgp(self, bgp):
        """
        Sets the bgp of this EdgeDeviceSettingsData.

        :param bgp: The bgp of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataBgp
        """

        self._bgp = bgp

    @property
    def lan(self):
        """
        Gets the lan of this EdgeDeviceSettingsData.

        :return: The lan of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataLan
        """
        return self._lan

    @lan.setter
    def lan(self, lan):
        """
        Sets the lan of this EdgeDeviceSettingsData.

        :param lan: The lan of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataLan
        """

        self._lan = lan

    @property
    def routedInterfaces(self):
        """
        Gets the routedInterfaces of this EdgeDeviceSettingsData.

        :return: The routedInterfaces of this EdgeDeviceSettingsData.
        :rtype: list[EdgeDeviceSettingsDataRoutedInterfaces]
        """
        return self._routedInterfaces

    @routedInterfaces.setter
    def routedInterfaces(self, routedInterfaces):
        """
        Sets the routedInterfaces of this EdgeDeviceSettingsData.

        :param routedInterfaces: The routedInterfaces of this EdgeDeviceSettingsData.
        :type: list[EdgeDeviceSettingsDataRoutedInterfaces]
        """

        self._routedInterfaces = routedInterfaces

    @property
    def routes(self):
        """
        Gets the routes of this EdgeDeviceSettingsData.

        :return: The routes of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataRoutes
        """
        return self._routes

    @routes.setter
    def routes(self, routes):
        """
        Sets the routes of this EdgeDeviceSettingsData.

        :param routes: The routes of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataRoutes
        """

        self._routes = routes

    @property
    def ha(self):
        """
        Gets the ha of this EdgeDeviceSettingsData.

        :return: The ha of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataHa
        """
        return self._ha

    @ha.setter
    def ha(self, ha):
        """
        Sets the ha of this EdgeDeviceSettingsData.

        :param ha: The ha of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataHa
        """

        self._ha = ha

    @property
    def dns(self):
        """
        Gets the dns of this EdgeDeviceSettingsData.

        :return: The dns of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataDns
        """
        return self._dns

    @dns.setter
    def dns(self, dns):
        """
        Sets the dns of this EdgeDeviceSettingsData.

        :param dns: The dns of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataDns
        """

        self._dns = dns

    @property
    def netflow(self):
        """
        Gets the netflow of this EdgeDeviceSettingsData.

        :return: The netflow of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataNetflow
        """
        return self._netflow

    @netflow.setter
    def netflow(self, netflow):
        """
        Sets the netflow of this EdgeDeviceSettingsData.

        :param netflow: The netflow of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataNetflow
        """

        self._netflow = netflow

    @property
    def vqm(self):
        """
        Gets the vqm of this EdgeDeviceSettingsData.

        :return: The vqm of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataVqm
        """
        return self._vqm

    @vqm.setter
    def vqm(self, vqm):
        """
        Sets the vqm of this EdgeDeviceSettingsData.

        :param vqm: The vqm of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataVqm
        """

        self._vqm = vqm

    @property
    def vrrp(self):
        """
        Gets the vrrp of this EdgeDeviceSettingsData.

        :return: The vrrp of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataVrrp
        """
        return self._vrrp

    @vrrp.setter
    def vrrp(self, vrrp):
        """
        Sets the vrrp of this EdgeDeviceSettingsData.

        :param vrrp: The vrrp of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataVrrp
        """

        self._vrrp = vrrp

    @property
    def snmp(self):
        """
        Gets the snmp of this EdgeDeviceSettingsData.

        :return: The snmp of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataSnmp
        """
        return self._snmp

    @snmp.setter
    def snmp(self, snmp):
        """
        Sets the snmp of this EdgeDeviceSettingsData.

        :param snmp: The snmp of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataSnmp
        """

        self._snmp = snmp

    @property
    def multiSourceQos(self):
        """
        Gets the multiSourceQos of this EdgeDeviceSettingsData.

        :return: The multiSourceQos of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataMultiSourceQos
        """
        return self._multiSourceQos

    @multiSourceQos.setter
    def multiSourceQos(self, multiSourceQos):
        """
        Sets the multiSourceQos of this EdgeDeviceSettingsData.

        :param multiSourceQos: The multiSourceQos of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataMultiSourceQos
        """

        self._multiSourceQos = multiSourceQos

    @property
    def tacacs(self):
        """
        Gets the tacacs of this EdgeDeviceSettingsData.

        :return: The tacacs of this EdgeDeviceSettingsData.
        :rtype: EdgeDeviceSettingsDataTacacs
        """
        return self._tacacs

    @tacacs.setter
    def tacacs(self, tacacs):
        """
        Sets the tacacs of this EdgeDeviceSettingsData.

        :param tacacs: The tacacs of this EdgeDeviceSettingsData.
        :type: EdgeDeviceSettingsDataTacacs
        """

        self._tacacs = tacacs

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, EdgeDeviceSettingsData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
