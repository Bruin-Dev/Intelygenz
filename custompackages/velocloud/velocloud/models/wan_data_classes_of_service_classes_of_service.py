# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class WANDataClassesOfServiceClassesOfService(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, name=None, dscpTags=None, staticSLA=None, bandwidthPct=None, bandwidthGuaranteed=None, defaultClassOfService=None):
        """
        WANDataClassesOfServiceClassesOfService - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'name': 'str',
            'dscpTags': 'list[str]',
            'staticSLA': 'WANDataClassesOfServiceStaticSLA',
            'bandwidthPct': 'int',
            'bandwidthGuaranteed': 'bool',
            'defaultClassOfService': 'bool'
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'dscpTags': 'dscpTags',
            'staticSLA': 'staticSLA',
            'bandwidthPct': 'bandwidthPct',
            'bandwidthGuaranteed': 'bandwidthGuaranteed',
            'defaultClassOfService': 'defaultClassOfService'
        }

        self._id = id
        self._name = name
        self._dscpTags = dscpTags
        self._staticSLA = staticSLA
        self._bandwidthPct = bandwidthPct
        self._bandwidthGuaranteed = bandwidthGuaranteed
        self._defaultClassOfService = defaultClassOfService

    @property
    def id(self):
        """
        Gets the id of this WANDataClassesOfServiceClassesOfService.

        :return: The id of this WANDataClassesOfServiceClassesOfService.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this WANDataClassesOfServiceClassesOfService.

        :param id: The id of this WANDataClassesOfServiceClassesOfService.
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """
        Gets the name of this WANDataClassesOfServiceClassesOfService.

        :return: The name of this WANDataClassesOfServiceClassesOfService.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this WANDataClassesOfServiceClassesOfService.

        :param name: The name of this WANDataClassesOfServiceClassesOfService.
        :type: str
        """

        self._name = name

    @property
    def dscpTags(self):
        """
        Gets the dscpTags of this WANDataClassesOfServiceClassesOfService.

        :return: The dscpTags of this WANDataClassesOfServiceClassesOfService.
        :rtype: list[str]
        """
        return self._dscpTags

    @dscpTags.setter
    def dscpTags(self, dscpTags):
        """
        Sets the dscpTags of this WANDataClassesOfServiceClassesOfService.

        :param dscpTags: The dscpTags of this WANDataClassesOfServiceClassesOfService.
        :type: list[str]
        """

        self._dscpTags = dscpTags

    @property
    def staticSLA(self):
        """
        Gets the staticSLA of this WANDataClassesOfServiceClassesOfService.

        :return: The staticSLA of this WANDataClassesOfServiceClassesOfService.
        :rtype: WANDataClassesOfServiceStaticSLA
        """
        return self._staticSLA

    @staticSLA.setter
    def staticSLA(self, staticSLA):
        """
        Sets the staticSLA of this WANDataClassesOfServiceClassesOfService.

        :param staticSLA: The staticSLA of this WANDataClassesOfServiceClassesOfService.
        :type: WANDataClassesOfServiceStaticSLA
        """

        self._staticSLA = staticSLA

    @property
    def bandwidthPct(self):
        """
        Gets the bandwidthPct of this WANDataClassesOfServiceClassesOfService.

        :return: The bandwidthPct of this WANDataClassesOfServiceClassesOfService.
        :rtype: int
        """
        return self._bandwidthPct

    @bandwidthPct.setter
    def bandwidthPct(self, bandwidthPct):
        """
        Sets the bandwidthPct of this WANDataClassesOfServiceClassesOfService.

        :param bandwidthPct: The bandwidthPct of this WANDataClassesOfServiceClassesOfService.
        :type: int
        """

        self._bandwidthPct = bandwidthPct

    @property
    def bandwidthGuaranteed(self):
        """
        Gets the bandwidthGuaranteed of this WANDataClassesOfServiceClassesOfService.

        :return: The bandwidthGuaranteed of this WANDataClassesOfServiceClassesOfService.
        :rtype: bool
        """
        return self._bandwidthGuaranteed

    @bandwidthGuaranteed.setter
    def bandwidthGuaranteed(self, bandwidthGuaranteed):
        """
        Sets the bandwidthGuaranteed of this WANDataClassesOfServiceClassesOfService.

        :param bandwidthGuaranteed: The bandwidthGuaranteed of this WANDataClassesOfServiceClassesOfService.
        :type: bool
        """

        self._bandwidthGuaranteed = bandwidthGuaranteed

    @property
    def defaultClassOfService(self):
        """
        Gets the defaultClassOfService of this WANDataClassesOfServiceClassesOfService.

        :return: The defaultClassOfService of this WANDataClassesOfServiceClassesOfService.
        :rtype: bool
        """
        return self._defaultClassOfService

    @defaultClassOfService.setter
    def defaultClassOfService(self, defaultClassOfService):
        """
        Sets the defaultClassOfService of this WANDataClassesOfServiceClassesOfService.

        :param defaultClassOfService: The defaultClassOfService of this WANDataClassesOfServiceClassesOfService.
        :type: bool
        """

        self._defaultClassOfService = defaultClassOfService

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, WANDataClassesOfServiceClassesOfService):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
