# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class EnterpriseGetEnterpriseCapabilitiesResult(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, enableBGP=None, enableCosMapping=None, enableFwLogs=None, enableOSPF=None, enablePKI=None, enablePremium=None, enableServiceRateLimiting=None):
        """
        EnterpriseGetEnterpriseCapabilitiesResult - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'enableBGP': 'bool',
            'enableCosMapping': 'bool',
            'enableFwLogs': 'bool',
            'enableOSPF': 'bool',
            'enablePKI': 'bool',
            'enablePremium': 'bool',
            'enableServiceRateLimiting': 'bool'
        }

        self.attribute_map = {
            'enableBGP': 'enableBGP',
            'enableCosMapping': 'enableCosMapping',
            'enableFwLogs': 'enableFwLogs',
            'enableOSPF': 'enableOSPF',
            'enablePKI': 'enablePKI',
            'enablePremium': 'enablePremium',
            'enableServiceRateLimiting': 'enableServiceRateLimiting'
        }

        self._enableBGP = enableBGP
        self._enableCosMapping = enableCosMapping
        self._enableFwLogs = enableFwLogs
        self._enableOSPF = enableOSPF
        self._enablePKI = enablePKI
        self._enablePremium = enablePremium
        self._enableServiceRateLimiting = enableServiceRateLimiting

    @property
    def enableBGP(self):
        """
        Gets the enableBGP of this EnterpriseGetEnterpriseCapabilitiesResult.

        :return: The enableBGP of this EnterpriseGetEnterpriseCapabilitiesResult.
        :rtype: bool
        """
        return self._enableBGP

    @enableBGP.setter
    def enableBGP(self, enableBGP):
        """
        Sets the enableBGP of this EnterpriseGetEnterpriseCapabilitiesResult.

        :param enableBGP: The enableBGP of this EnterpriseGetEnterpriseCapabilitiesResult.
        :type: bool
        """

        self._enableBGP = enableBGP

    @property
    def enableCosMapping(self):
        """
        Gets the enableCosMapping of this EnterpriseGetEnterpriseCapabilitiesResult.

        :return: The enableCosMapping of this EnterpriseGetEnterpriseCapabilitiesResult.
        :rtype: bool
        """
        return self._enableCosMapping

    @enableCosMapping.setter
    def enableCosMapping(self, enableCosMapping):
        """
        Sets the enableCosMapping of this EnterpriseGetEnterpriseCapabilitiesResult.

        :param enableCosMapping: The enableCosMapping of this EnterpriseGetEnterpriseCapabilitiesResult.
        :type: bool
        """

        self._enableCosMapping = enableCosMapping

    @property
    def enableFwLogs(self):
        """
        Gets the enableFwLogs of this EnterpriseGetEnterpriseCapabilitiesResult.

        :return: The enableFwLogs of this EnterpriseGetEnterpriseCapabilitiesResult.
        :rtype: bool
        """
        return self._enableFwLogs

    @enableFwLogs.setter
    def enableFwLogs(self, enableFwLogs):
        """
        Sets the enableFwLogs of this EnterpriseGetEnterpriseCapabilitiesResult.

        :param enableFwLogs: The enableFwLogs of this EnterpriseGetEnterpriseCapabilitiesResult.
        :type: bool
        """

        self._enableFwLogs = enableFwLogs

    @property
    def enableOSPF(self):
        """
        Gets the enableOSPF of this EnterpriseGetEnterpriseCapabilitiesResult.

        :return: The enableOSPF of this EnterpriseGetEnterpriseCapabilitiesResult.
        :rtype: bool
        """
        return self._enableOSPF

    @enableOSPF.setter
    def enableOSPF(self, enableOSPF):
        """
        Sets the enableOSPF of this EnterpriseGetEnterpriseCapabilitiesResult.

        :param enableOSPF: The enableOSPF of this EnterpriseGetEnterpriseCapabilitiesResult.
        :type: bool
        """

        self._enableOSPF = enableOSPF

    @property
    def enablePKI(self):
        """
        Gets the enablePKI of this EnterpriseGetEnterpriseCapabilitiesResult.

        :return: The enablePKI of this EnterpriseGetEnterpriseCapabilitiesResult.
        :rtype: bool
        """
        return self._enablePKI

    @enablePKI.setter
    def enablePKI(self, enablePKI):
        """
        Sets the enablePKI of this EnterpriseGetEnterpriseCapabilitiesResult.

        :param enablePKI: The enablePKI of this EnterpriseGetEnterpriseCapabilitiesResult.
        :type: bool
        """

        self._enablePKI = enablePKI

    @property
    def enablePremium(self):
        """
        Gets the enablePremium of this EnterpriseGetEnterpriseCapabilitiesResult.

        :return: The enablePremium of this EnterpriseGetEnterpriseCapabilitiesResult.
        :rtype: bool
        """
        return self._enablePremium

    @enablePremium.setter
    def enablePremium(self, enablePremium):
        """
        Sets the enablePremium of this EnterpriseGetEnterpriseCapabilitiesResult.

        :param enablePremium: The enablePremium of this EnterpriseGetEnterpriseCapabilitiesResult.
        :type: bool
        """

        self._enablePremium = enablePremium

    @property
    def enableServiceRateLimiting(self):
        """
        Gets the enableServiceRateLimiting of this EnterpriseGetEnterpriseCapabilitiesResult.

        :return: The enableServiceRateLimiting of this EnterpriseGetEnterpriseCapabilitiesResult.
        :rtype: bool
        """
        return self._enableServiceRateLimiting

    @enableServiceRateLimiting.setter
    def enableServiceRateLimiting(self, enableServiceRateLimiting):
        """
        Sets the enableServiceRateLimiting of this EnterpriseGetEnterpriseCapabilitiesResult.

        :param enableServiceRateLimiting: The enableServiceRateLimiting of this EnterpriseGetEnterpriseCapabilitiesResult.
        :type: bool
        """

        self._enableServiceRateLimiting = enableServiceRateLimiting

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, EnterpriseGetEnterpriseCapabilitiesResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
