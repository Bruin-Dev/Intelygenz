# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class EdgeDeviceSettingsDataLanNetworks(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, space=None, guest=None, secure=None, advertise=None, cost=None, dhcp=None, staticReserved=None, netmask=None, cidrPrefix=None, cidrIp=None, baseDhcpAddr=None, numDhcpAddr=None, name=None, interfaces=None, vlanId=None, managementIp=None, disabled=None):
        """
        EdgeDeviceSettingsDataLanNetworks - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'space': 'str',
            'guest': 'bool',
            'secure': 'bool',
            'advertise': 'bool',
            'cost': 'int',
            'dhcp': 'EdgeDeviceSettingsDataLanDhcp',
            'staticReserved': 'int',
            'netmask': 'str',
            'cidrPrefix': 'int',
            'cidrIp': 'str',
            'baseDhcpAddr': 'int',
            'numDhcpAddr': 'int',
            'name': 'str',
            'interfaces': 'list[str]',
            'vlanId': 'int',
            'managementIp': 'str',
            'disabled': 'bool'
        }

        self.attribute_map = {
            'space': 'space',
            'guest': 'guest',
            'secure': 'secure',
            'advertise': 'advertise',
            'cost': 'cost',
            'dhcp': 'dhcp',
            'staticReserved': 'staticReserved',
            'netmask': 'netmask',
            'cidrPrefix': 'cidrPrefix',
            'cidrIp': 'cidrIp',
            'baseDhcpAddr': 'baseDhcpAddr',
            'numDhcpAddr': 'numDhcpAddr',
            'name': 'name',
            'interfaces': 'interfaces',
            'vlanId': 'vlanId',
            'managementIp': 'managementIp',
            'disabled': 'disabled'
        }

        self._space = space
        self._guest = guest
        self._secure = secure
        self._advertise = advertise
        self._cost = cost
        self._dhcp = dhcp
        self._staticReserved = staticReserved
        self._netmask = netmask
        self._cidrPrefix = cidrPrefix
        self._cidrIp = cidrIp
        self._baseDhcpAddr = baseDhcpAddr
        self._numDhcpAddr = numDhcpAddr
        self._name = name
        self._interfaces = interfaces
        self._vlanId = vlanId
        self._managementIp = managementIp
        self._disabled = disabled

    @property
    def space(self):
        """
        Gets the space of this EdgeDeviceSettingsDataLanNetworks.

        :return: The space of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: str
        """
        return self._space

    @space.setter
    def space(self, space):
        """
        Sets the space of this EdgeDeviceSettingsDataLanNetworks.

        :param space: The space of this EdgeDeviceSettingsDataLanNetworks.
        :type: str
        """

        self._space = space

    @property
    def guest(self):
        """
        Gets the guest of this EdgeDeviceSettingsDataLanNetworks.

        :return: The guest of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: bool
        """
        return self._guest

    @guest.setter
    def guest(self, guest):
        """
        Sets the guest of this EdgeDeviceSettingsDataLanNetworks.

        :param guest: The guest of this EdgeDeviceSettingsDataLanNetworks.
        :type: bool
        """

        self._guest = guest

    @property
    def secure(self):
        """
        Gets the secure of this EdgeDeviceSettingsDataLanNetworks.

        :return: The secure of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: bool
        """
        return self._secure

    @secure.setter
    def secure(self, secure):
        """
        Sets the secure of this EdgeDeviceSettingsDataLanNetworks.

        :param secure: The secure of this EdgeDeviceSettingsDataLanNetworks.
        :type: bool
        """

        self._secure = secure

    @property
    def advertise(self):
        """
        Gets the advertise of this EdgeDeviceSettingsDataLanNetworks.

        :return: The advertise of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: bool
        """
        return self._advertise

    @advertise.setter
    def advertise(self, advertise):
        """
        Sets the advertise of this EdgeDeviceSettingsDataLanNetworks.

        :param advertise: The advertise of this EdgeDeviceSettingsDataLanNetworks.
        :type: bool
        """

        self._advertise = advertise

    @property
    def cost(self):
        """
        Gets the cost of this EdgeDeviceSettingsDataLanNetworks.

        :return: The cost of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: int
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """
        Sets the cost of this EdgeDeviceSettingsDataLanNetworks.

        :param cost: The cost of this EdgeDeviceSettingsDataLanNetworks.
        :type: int
        """

        self._cost = cost

    @property
    def dhcp(self):
        """
        Gets the dhcp of this EdgeDeviceSettingsDataLanNetworks.

        :return: The dhcp of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: EdgeDeviceSettingsDataLanDhcp
        """
        return self._dhcp

    @dhcp.setter
    def dhcp(self, dhcp):
        """
        Sets the dhcp of this EdgeDeviceSettingsDataLanNetworks.

        :param dhcp: The dhcp of this EdgeDeviceSettingsDataLanNetworks.
        :type: EdgeDeviceSettingsDataLanDhcp
        """

        self._dhcp = dhcp

    @property
    def staticReserved(self):
        """
        Gets the staticReserved of this EdgeDeviceSettingsDataLanNetworks.

        :return: The staticReserved of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: int
        """
        return self._staticReserved

    @staticReserved.setter
    def staticReserved(self, staticReserved):
        """
        Sets the staticReserved of this EdgeDeviceSettingsDataLanNetworks.

        :param staticReserved: The staticReserved of this EdgeDeviceSettingsDataLanNetworks.
        :type: int
        """

        self._staticReserved = staticReserved

    @property
    def netmask(self):
        """
        Gets the netmask of this EdgeDeviceSettingsDataLanNetworks.

        :return: The netmask of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: str
        """
        return self._netmask

    @netmask.setter
    def netmask(self, netmask):
        """
        Sets the netmask of this EdgeDeviceSettingsDataLanNetworks.

        :param netmask: The netmask of this EdgeDeviceSettingsDataLanNetworks.
        :type: str
        """

        self._netmask = netmask

    @property
    def cidrPrefix(self):
        """
        Gets the cidrPrefix of this EdgeDeviceSettingsDataLanNetworks.

        :return: The cidrPrefix of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: int
        """
        return self._cidrPrefix

    @cidrPrefix.setter
    def cidrPrefix(self, cidrPrefix):
        """
        Sets the cidrPrefix of this EdgeDeviceSettingsDataLanNetworks.

        :param cidrPrefix: The cidrPrefix of this EdgeDeviceSettingsDataLanNetworks.
        :type: int
        """

        self._cidrPrefix = cidrPrefix

    @property
    def cidrIp(self):
        """
        Gets the cidrIp of this EdgeDeviceSettingsDataLanNetworks.

        :return: The cidrIp of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: str
        """
        return self._cidrIp

    @cidrIp.setter
    def cidrIp(self, cidrIp):
        """
        Sets the cidrIp of this EdgeDeviceSettingsDataLanNetworks.

        :param cidrIp: The cidrIp of this EdgeDeviceSettingsDataLanNetworks.
        :type: str
        """

        self._cidrIp = cidrIp

    @property
    def baseDhcpAddr(self):
        """
        Gets the baseDhcpAddr of this EdgeDeviceSettingsDataLanNetworks.

        :return: The baseDhcpAddr of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: int
        """
        return self._baseDhcpAddr

    @baseDhcpAddr.setter
    def baseDhcpAddr(self, baseDhcpAddr):
        """
        Sets the baseDhcpAddr of this EdgeDeviceSettingsDataLanNetworks.

        :param baseDhcpAddr: The baseDhcpAddr of this EdgeDeviceSettingsDataLanNetworks.
        :type: int
        """

        self._baseDhcpAddr = baseDhcpAddr

    @property
    def numDhcpAddr(self):
        """
        Gets the numDhcpAddr of this EdgeDeviceSettingsDataLanNetworks.

        :return: The numDhcpAddr of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: int
        """
        return self._numDhcpAddr

    @numDhcpAddr.setter
    def numDhcpAddr(self, numDhcpAddr):
        """
        Sets the numDhcpAddr of this EdgeDeviceSettingsDataLanNetworks.

        :param numDhcpAddr: The numDhcpAddr of this EdgeDeviceSettingsDataLanNetworks.
        :type: int
        """

        self._numDhcpAddr = numDhcpAddr

    @property
    def name(self):
        """
        Gets the name of this EdgeDeviceSettingsDataLanNetworks.

        :return: The name of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this EdgeDeviceSettingsDataLanNetworks.

        :param name: The name of this EdgeDeviceSettingsDataLanNetworks.
        :type: str
        """

        self._name = name

    @property
    def interfaces(self):
        """
        Gets the interfaces of this EdgeDeviceSettingsDataLanNetworks.

        :return: The interfaces of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: list[str]
        """
        return self._interfaces

    @interfaces.setter
    def interfaces(self, interfaces):
        """
        Sets the interfaces of this EdgeDeviceSettingsDataLanNetworks.

        :param interfaces: The interfaces of this EdgeDeviceSettingsDataLanNetworks.
        :type: list[str]
        """

        self._interfaces = interfaces

    @property
    def vlanId(self):
        """
        Gets the vlanId of this EdgeDeviceSettingsDataLanNetworks.

        :return: The vlanId of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: int
        """
        return self._vlanId

    @vlanId.setter
    def vlanId(self, vlanId):
        """
        Sets the vlanId of this EdgeDeviceSettingsDataLanNetworks.

        :param vlanId: The vlanId of this EdgeDeviceSettingsDataLanNetworks.
        :type: int
        """

        self._vlanId = vlanId

    @property
    def managementIp(self):
        """
        Gets the managementIp of this EdgeDeviceSettingsDataLanNetworks.

        :return: The managementIp of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: str
        """
        return self._managementIp

    @managementIp.setter
    def managementIp(self, managementIp):
        """
        Sets the managementIp of this EdgeDeviceSettingsDataLanNetworks.

        :param managementIp: The managementIp of this EdgeDeviceSettingsDataLanNetworks.
        :type: str
        """

        self._managementIp = managementIp

    @property
    def disabled(self):
        """
        Gets the disabled of this EdgeDeviceSettingsDataLanNetworks.

        :return: The disabled of this EdgeDeviceSettingsDataLanNetworks.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """
        Sets the disabled of this EdgeDeviceSettingsDataLanNetworks.

        :param disabled: The disabled of this EdgeDeviceSettingsDataLanNetworks.
        :type: bool
        """

        self._disabled = disabled

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, EdgeDeviceSettingsDataLanNetworks):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
