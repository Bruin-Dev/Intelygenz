# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class RoleCreateRoleCustomization(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, forRoleId=None, name=None, description=None, userId=None, enterpriseId=None, operatorId=None, networkId=None, privilegeIds=None):
        """
        RoleCreateRoleCustomization - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'forRoleId': 'int',
            'name': 'str',
            'description': 'str',
            'userId': 'int',
            'enterpriseId': 'int',
            'operatorId': 'int',
            'networkId': 'int',
            'privilegeIds': 'list[int]'
        }

        self.attribute_map = {
            'forRoleId': 'forRoleId',
            'name': 'name',
            'description': 'description',
            'userId': 'userId',
            'enterpriseId': 'enterpriseId',
            'operatorId': 'operatorId',
            'networkId': 'networkId',
            'privilegeIds': 'privilegeIds'
        }

        self._forRoleId = forRoleId
        self._name = name
        self._description = description
        self._userId = userId
        self._enterpriseId = enterpriseId
        self._operatorId = operatorId
        self._networkId = networkId
        self._privilegeIds = privilegeIds

    @property
    def forRoleId(self):
        """
        Gets the forRoleId of this RoleCreateRoleCustomization.

        :return: The forRoleId of this RoleCreateRoleCustomization.
        :rtype: int
        """
        return self._forRoleId

    @forRoleId.setter
    def forRoleId(self, forRoleId):
        """
        Sets the forRoleId of this RoleCreateRoleCustomization.

        :param forRoleId: The forRoleId of this RoleCreateRoleCustomization.
        :type: int
        """

        self._forRoleId = forRoleId

    @property
    def name(self):
        """
        Gets the name of this RoleCreateRoleCustomization.

        :return: The name of this RoleCreateRoleCustomization.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this RoleCreateRoleCustomization.

        :param name: The name of this RoleCreateRoleCustomization.
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """
        Gets the description of this RoleCreateRoleCustomization.

        :return: The description of this RoleCreateRoleCustomization.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this RoleCreateRoleCustomization.

        :param description: The description of this RoleCreateRoleCustomization.
        :type: str
        """

        self._description = description

    @property
    def userId(self):
        """
        Gets the userId of this RoleCreateRoleCustomization.

        :return: The userId of this RoleCreateRoleCustomization.
        :rtype: int
        """
        return self._userId

    @userId.setter
    def userId(self, userId):
        """
        Sets the userId of this RoleCreateRoleCustomization.

        :param userId: The userId of this RoleCreateRoleCustomization.
        :type: int
        """

        self._userId = userId

    @property
    def enterpriseId(self):
        """
        Gets the enterpriseId of this RoleCreateRoleCustomization.

        :return: The enterpriseId of this RoleCreateRoleCustomization.
        :rtype: int
        """
        return self._enterpriseId

    @enterpriseId.setter
    def enterpriseId(self, enterpriseId):
        """
        Sets the enterpriseId of this RoleCreateRoleCustomization.

        :param enterpriseId: The enterpriseId of this RoleCreateRoleCustomization.
        :type: int
        """

        self._enterpriseId = enterpriseId

    @property
    def operatorId(self):
        """
        Gets the operatorId of this RoleCreateRoleCustomization.

        :return: The operatorId of this RoleCreateRoleCustomization.
        :rtype: int
        """
        return self._operatorId

    @operatorId.setter
    def operatorId(self, operatorId):
        """
        Sets the operatorId of this RoleCreateRoleCustomization.

        :param operatorId: The operatorId of this RoleCreateRoleCustomization.
        :type: int
        """

        self._operatorId = operatorId

    @property
    def networkId(self):
        """
        Gets the networkId of this RoleCreateRoleCustomization.

        :return: The networkId of this RoleCreateRoleCustomization.
        :rtype: int
        """
        return self._networkId

    @networkId.setter
    def networkId(self, networkId):
        """
        Sets the networkId of this RoleCreateRoleCustomization.

        :param networkId: The networkId of this RoleCreateRoleCustomization.
        :type: int
        """

        self._networkId = networkId

    @property
    def privilegeIds(self):
        """
        Gets the privilegeIds of this RoleCreateRoleCustomization.

        :return: The privilegeIds of this RoleCreateRoleCustomization.
        :rtype: list[int]
        """
        return self._privilegeIds

    @privilegeIds.setter
    def privilegeIds(self, privilegeIds):
        """
        Sets the privilegeIds of this RoleCreateRoleCustomization.

        :param privilegeIds: The privilegeIds of this RoleCreateRoleCustomization.
        :type: list[int]
        """

        self._privilegeIds = privilegeIds

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, RoleCreateRoleCustomization):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
