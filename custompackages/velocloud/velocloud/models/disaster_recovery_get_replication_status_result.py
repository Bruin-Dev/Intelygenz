# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DisasterRecoveryGetReplicationStatusResult(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, activeAddress=None, activeReplicationAddress=None, clientContact=None, clientCount=None, drState=None, drVCOUser=None, failureDescription=None, lastDrProtectedTime=None, role=None, roleTimestamp=None, standbyList=None, stateHistory=None, stateTimestamp=None, vcoIp=None, vcoReplicationIp=None, vcoUuid=None):
        """
        DisasterRecoveryGetReplicationStatusResult - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'activeAddress': 'str',
            'activeReplicationAddress': 'str',
            'clientContact': 'list[DisasterRecoveryClientContact]',
            'clientCount': 'DisasterRecoveryGetReplicationStatusResultClientCount',
            'drState': 'str',
            'drVCOUser': 'str',
            'failureDescription': 'str',
            'lastDrProtectedTime': 'datetime',
            'role': 'str',
            'roleTimestamp': 'datetime',
            'standbyList': 'list[DisasterRecoveryGetReplicationStatusResultStandbyList]',
            'stateHistory': 'list[DisasterRecoveryGetReplicationStatusResultStateHistory]',
            'stateTimestamp': 'datetime',
            'vcoIp': 'str',
            'vcoReplicationIp': 'str',
            'vcoUuid': 'str'
        }

        self.attribute_map = {
            'activeAddress': 'activeAddress',
            'activeReplicationAddress': 'activeReplicationAddress',
            'clientContact': 'clientContact',
            'clientCount': 'clientCount',
            'drState': 'drState',
            'drVCOUser': 'drVCOUser',
            'failureDescription': 'failureDescription',
            'lastDrProtectedTime': 'lastDrProtectedTime',
            'role': 'role',
            'roleTimestamp': 'roleTimestamp',
            'standbyList': 'standbyList',
            'stateHistory': 'stateHistory',
            'stateTimestamp': 'stateTimestamp',
            'vcoIp': 'vcoIp',
            'vcoReplicationIp': 'vcoReplicationIp',
            'vcoUuid': 'vcoUuid'
        }

        self._activeAddress = activeAddress
        self._activeReplicationAddress = activeReplicationAddress
        self._clientContact = clientContact
        self._clientCount = clientCount
        self._drState = drState
        self._drVCOUser = drVCOUser
        self._failureDescription = failureDescription
        self._lastDrProtectedTime = lastDrProtectedTime
        self._role = role
        self._roleTimestamp = roleTimestamp
        self._standbyList = standbyList
        self._stateHistory = stateHistory
        self._stateTimestamp = stateTimestamp
        self._vcoIp = vcoIp
        self._vcoReplicationIp = vcoReplicationIp
        self._vcoUuid = vcoUuid

    @property
    def activeAddress(self):
        """
        Gets the activeAddress of this DisasterRecoveryGetReplicationStatusResult.

        :return: The activeAddress of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: str
        """
        return self._activeAddress

    @activeAddress.setter
    def activeAddress(self, activeAddress):
        """
        Sets the activeAddress of this DisasterRecoveryGetReplicationStatusResult.

        :param activeAddress: The activeAddress of this DisasterRecoveryGetReplicationStatusResult.
        :type: str
        """

        self._activeAddress = activeAddress

    @property
    def activeReplicationAddress(self):
        """
        Gets the activeReplicationAddress of this DisasterRecoveryGetReplicationStatusResult.

        :return: The activeReplicationAddress of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: str
        """
        return self._activeReplicationAddress

    @activeReplicationAddress.setter
    def activeReplicationAddress(self, activeReplicationAddress):
        """
        Sets the activeReplicationAddress of this DisasterRecoveryGetReplicationStatusResult.

        :param activeReplicationAddress: The activeReplicationAddress of this DisasterRecoveryGetReplicationStatusResult.
        :type: str
        """

        self._activeReplicationAddress = activeReplicationAddress

    @property
    def clientContact(self):
        """
        Gets the clientContact of this DisasterRecoveryGetReplicationStatusResult.

        :return: The clientContact of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: list[DisasterRecoveryClientContact]
        """
        return self._clientContact

    @clientContact.setter
    def clientContact(self, clientContact):
        """
        Sets the clientContact of this DisasterRecoveryGetReplicationStatusResult.

        :param clientContact: The clientContact of this DisasterRecoveryGetReplicationStatusResult.
        :type: list[DisasterRecoveryClientContact]
        """

        self._clientContact = clientContact

    @property
    def clientCount(self):
        """
        Gets the clientCount of this DisasterRecoveryGetReplicationStatusResult.

        :return: The clientCount of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: DisasterRecoveryGetReplicationStatusResultClientCount
        """
        return self._clientCount

    @clientCount.setter
    def clientCount(self, clientCount):
        """
        Sets the clientCount of this DisasterRecoveryGetReplicationStatusResult.

        :param clientCount: The clientCount of this DisasterRecoveryGetReplicationStatusResult.
        :type: DisasterRecoveryGetReplicationStatusResultClientCount
        """

        self._clientCount = clientCount

    @property
    def drState(self):
        """
        Gets the drState of this DisasterRecoveryGetReplicationStatusResult.

        :return: The drState of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: str
        """
        return self._drState

    @drState.setter
    def drState(self, drState):
        """
        Sets the drState of this DisasterRecoveryGetReplicationStatusResult.

        :param drState: The drState of this DisasterRecoveryGetReplicationStatusResult.
        :type: str
        """

        self._drState = drState

    @property
    def drVCOUser(self):
        """
        Gets the drVCOUser of this DisasterRecoveryGetReplicationStatusResult.

        :return: The drVCOUser of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: str
        """
        return self._drVCOUser

    @drVCOUser.setter
    def drVCOUser(self, drVCOUser):
        """
        Sets the drVCOUser of this DisasterRecoveryGetReplicationStatusResult.

        :param drVCOUser: The drVCOUser of this DisasterRecoveryGetReplicationStatusResult.
        :type: str
        """

        self._drVCOUser = drVCOUser

    @property
    def failureDescription(self):
        """
        Gets the failureDescription of this DisasterRecoveryGetReplicationStatusResult.

        :return: The failureDescription of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: str
        """
        return self._failureDescription

    @failureDescription.setter
    def failureDescription(self, failureDescription):
        """
        Sets the failureDescription of this DisasterRecoveryGetReplicationStatusResult.

        :param failureDescription: The failureDescription of this DisasterRecoveryGetReplicationStatusResult.
        :type: str
        """

        self._failureDescription = failureDescription

    @property
    def lastDrProtectedTime(self):
        """
        Gets the lastDrProtectedTime of this DisasterRecoveryGetReplicationStatusResult.

        :return: The lastDrProtectedTime of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: datetime
        """
        return self._lastDrProtectedTime

    @lastDrProtectedTime.setter
    def lastDrProtectedTime(self, lastDrProtectedTime):
        """
        Sets the lastDrProtectedTime of this DisasterRecoveryGetReplicationStatusResult.

        :param lastDrProtectedTime: The lastDrProtectedTime of this DisasterRecoveryGetReplicationStatusResult.
        :type: datetime
        """

        self._lastDrProtectedTime = lastDrProtectedTime

    @property
    def role(self):
        """
        Gets the role of this DisasterRecoveryGetReplicationStatusResult.

        :return: The role of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """
        Sets the role of this DisasterRecoveryGetReplicationStatusResult.

        :param role: The role of this DisasterRecoveryGetReplicationStatusResult.
        :type: str
        """

        self._role = role

    @property
    def roleTimestamp(self):
        """
        Gets the roleTimestamp of this DisasterRecoveryGetReplicationStatusResult.

        :return: The roleTimestamp of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: datetime
        """
        return self._roleTimestamp

    @roleTimestamp.setter
    def roleTimestamp(self, roleTimestamp):
        """
        Sets the roleTimestamp of this DisasterRecoveryGetReplicationStatusResult.

        :param roleTimestamp: The roleTimestamp of this DisasterRecoveryGetReplicationStatusResult.
        :type: datetime
        """

        self._roleTimestamp = roleTimestamp

    @property
    def standbyList(self):
        """
        Gets the standbyList of this DisasterRecoveryGetReplicationStatusResult.

        :return: The standbyList of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: list[DisasterRecoveryGetReplicationStatusResultStandbyList]
        """
        return self._standbyList

    @standbyList.setter
    def standbyList(self, standbyList):
        """
        Sets the standbyList of this DisasterRecoveryGetReplicationStatusResult.

        :param standbyList: The standbyList of this DisasterRecoveryGetReplicationStatusResult.
        :type: list[DisasterRecoveryGetReplicationStatusResultStandbyList]
        """

        self._standbyList = standbyList

    @property
    def stateHistory(self):
        """
        Gets the stateHistory of this DisasterRecoveryGetReplicationStatusResult.

        :return: The stateHistory of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: list[DisasterRecoveryGetReplicationStatusResultStateHistory]
        """
        return self._stateHistory

    @stateHistory.setter
    def stateHistory(self, stateHistory):
        """
        Sets the stateHistory of this DisasterRecoveryGetReplicationStatusResult.

        :param stateHistory: The stateHistory of this DisasterRecoveryGetReplicationStatusResult.
        :type: list[DisasterRecoveryGetReplicationStatusResultStateHistory]
        """

        self._stateHistory = stateHistory

    @property
    def stateTimestamp(self):
        """
        Gets the stateTimestamp of this DisasterRecoveryGetReplicationStatusResult.

        :return: The stateTimestamp of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: datetime
        """
        return self._stateTimestamp

    @stateTimestamp.setter
    def stateTimestamp(self, stateTimestamp):
        """
        Sets the stateTimestamp of this DisasterRecoveryGetReplicationStatusResult.

        :param stateTimestamp: The stateTimestamp of this DisasterRecoveryGetReplicationStatusResult.
        :type: datetime
        """

        self._stateTimestamp = stateTimestamp

    @property
    def vcoIp(self):
        """
        Gets the vcoIp of this DisasterRecoveryGetReplicationStatusResult.

        :return: The vcoIp of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: str
        """
        return self._vcoIp

    @vcoIp.setter
    def vcoIp(self, vcoIp):
        """
        Sets the vcoIp of this DisasterRecoveryGetReplicationStatusResult.

        :param vcoIp: The vcoIp of this DisasterRecoveryGetReplicationStatusResult.
        :type: str
        """

        self._vcoIp = vcoIp

    @property
    def vcoReplicationIp(self):
        """
        Gets the vcoReplicationIp of this DisasterRecoveryGetReplicationStatusResult.

        :return: The vcoReplicationIp of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: str
        """
        return self._vcoReplicationIp

    @vcoReplicationIp.setter
    def vcoReplicationIp(self, vcoReplicationIp):
        """
        Sets the vcoReplicationIp of this DisasterRecoveryGetReplicationStatusResult.

        :param vcoReplicationIp: The vcoReplicationIp of this DisasterRecoveryGetReplicationStatusResult.
        :type: str
        """

        self._vcoReplicationIp = vcoReplicationIp

    @property
    def vcoUuid(self):
        """
        Gets the vcoUuid of this DisasterRecoveryGetReplicationStatusResult.

        :return: The vcoUuid of this DisasterRecoveryGetReplicationStatusResult.
        :rtype: str
        """
        return self._vcoUuid

    @vcoUuid.setter
    def vcoUuid(self, vcoUuid):
        """
        Sets the vcoUuid of this DisasterRecoveryGetReplicationStatusResult.

        :param vcoUuid: The vcoUuid of this DisasterRecoveryGetReplicationStatusResult.
        :type: str
        """

        self._vcoUuid = vcoUuid

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DisasterRecoveryGetReplicationStatusResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
