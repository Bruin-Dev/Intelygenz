# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class MonitoringGetEnterpriseEdgeVnfStatusResultItem(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, created=None, operatorId=None, networkId=None, enterpriseId=None, edgeId=None, gatewayId=None, parentGroupId=None, description=None, object=None, name=None, type=None, logicalId=None, alertsEnabled=None, operatorAlertsEnabled=None, status=None, statusModified=None, previousData=None, previousCreated=None, draftData=None, draftCreated=None, draftComment=None, data=None, lastContact=None, version=None, modified=None, edgeCount=None, edgeUsage=None):
        """
        MonitoringGetEnterpriseEdgeVnfStatusResultItem - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'created': 'datetime',
            'operatorId': 'int',
            'networkId': 'int',
            'enterpriseId': 'int',
            'edgeId': 'int',
            'gatewayId': 'int',
            'parentGroupId': 'int',
            'description': 'str',
            'object': 'str',
            'name': 'str',
            'type': 'str',
            'logicalId': 'str',
            'alertsEnabled': 'bool',
            'operatorAlertsEnabled': 'bool',
            'status': 'str',
            'statusModified': 'datetime',
            'previousData': 'str',
            'previousCreated': 'datetime',
            'draftData': 'str',
            'draftCreated': 'datetime',
            'draftComment': 'str',
            'data': 'MonitoringGetEnterpriseEdgeVnfStatusResultItemData',
            'lastContact': 'datetime',
            'version': 'str',
            'modified': 'datetime',
            'edgeCount': 'int',
            'edgeUsage': 'list[MonitoringGetEnterpriseEdgeVnfStatusResultItemEdgeUsage]'
        }

        self.attribute_map = {
            'id': 'id',
            'created': 'created',
            'operatorId': 'operatorId',
            'networkId': 'networkId',
            'enterpriseId': 'enterpriseId',
            'edgeId': 'edgeId',
            'gatewayId': 'gatewayId',
            'parentGroupId': 'parentGroupId',
            'description': 'description',
            'object': 'object',
            'name': 'name',
            'type': 'type',
            'logicalId': 'logicalId',
            'alertsEnabled': 'alertsEnabled',
            'operatorAlertsEnabled': 'operatorAlertsEnabled',
            'status': 'status',
            'statusModified': 'statusModified',
            'previousData': 'previousData',
            'previousCreated': 'previousCreated',
            'draftData': 'draftData',
            'draftCreated': 'draftCreated',
            'draftComment': 'draftComment',
            'data': 'data',
            'lastContact': 'lastContact',
            'version': 'version',
            'modified': 'modified',
            'edgeCount': 'edgeCount',
            'edgeUsage': 'edgeUsage'
        }

        self._id = id
        self._created = created
        self._operatorId = operatorId
        self._networkId = networkId
        self._enterpriseId = enterpriseId
        self._edgeId = edgeId
        self._gatewayId = gatewayId
        self._parentGroupId = parentGroupId
        self._description = description
        self._object = object
        self._name = name
        self._type = type
        self._logicalId = logicalId
        self._alertsEnabled = alertsEnabled
        self._operatorAlertsEnabled = operatorAlertsEnabled
        self._status = status
        self._statusModified = statusModified
        self._previousData = previousData
        self._previousCreated = previousCreated
        self._draftData = draftData
        self._draftCreated = draftCreated
        self._draftComment = draftComment
        self._data = data
        self._lastContact = lastContact
        self._version = version
        self._modified = modified
        self._edgeCount = edgeCount
        self._edgeUsage = edgeUsage

    @property
    def id(self):
        """
        Gets the id of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The id of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param id: The id of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: int
        """

        self._id = id

    @property
    def created(self):
        """
        Gets the created of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The created of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param created: The created of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: datetime
        """

        self._created = created

    @property
    def operatorId(self):
        """
        Gets the operatorId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The operatorId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: int
        """
        return self._operatorId

    @operatorId.setter
    def operatorId(self, operatorId):
        """
        Sets the operatorId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param operatorId: The operatorId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: int
        """

        self._operatorId = operatorId

    @property
    def networkId(self):
        """
        Gets the networkId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The networkId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: int
        """
        return self._networkId

    @networkId.setter
    def networkId(self, networkId):
        """
        Sets the networkId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param networkId: The networkId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: int
        """

        self._networkId = networkId

    @property
    def enterpriseId(self):
        """
        Gets the enterpriseId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The enterpriseId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: int
        """
        return self._enterpriseId

    @enterpriseId.setter
    def enterpriseId(self, enterpriseId):
        """
        Sets the enterpriseId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param enterpriseId: The enterpriseId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: int
        """

        self._enterpriseId = enterpriseId

    @property
    def edgeId(self):
        """
        Gets the edgeId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The edgeId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: int
        """
        return self._edgeId

    @edgeId.setter
    def edgeId(self, edgeId):
        """
        Sets the edgeId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param edgeId: The edgeId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: int
        """

        self._edgeId = edgeId

    @property
    def gatewayId(self):
        """
        Gets the gatewayId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The gatewayId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: int
        """
        return self._gatewayId

    @gatewayId.setter
    def gatewayId(self, gatewayId):
        """
        Sets the gatewayId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param gatewayId: The gatewayId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: int
        """

        self._gatewayId = gatewayId

    @property
    def parentGroupId(self):
        """
        Gets the parentGroupId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The parentGroupId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: int
        """
        return self._parentGroupId

    @parentGroupId.setter
    def parentGroupId(self, parentGroupId):
        """
        Sets the parentGroupId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param parentGroupId: The parentGroupId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: int
        """

        self._parentGroupId = parentGroupId

    @property
    def description(self):
        """
        Gets the description of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The description of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param description: The description of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._description = description

    @property
    def object(self):
        """
        Gets the object of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The object of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """
        Sets the object of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param object: The object of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._object = object

    @property
    def name(self):
        """
        Gets the name of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The name of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param name: The name of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._name = name

    @property
    def type(self):
        """
        Gets the type of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The type of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param type: The type of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._type = type

    @property
    def logicalId(self):
        """
        Gets the logicalId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The logicalId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._logicalId

    @logicalId.setter
    def logicalId(self, logicalId):
        """
        Sets the logicalId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param logicalId: The logicalId of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._logicalId = logicalId

    @property
    def alertsEnabled(self):
        """
        Gets the alertsEnabled of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The alertsEnabled of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: bool
        """
        return self._alertsEnabled

    @alertsEnabled.setter
    def alertsEnabled(self, alertsEnabled):
        """
        Sets the alertsEnabled of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param alertsEnabled: The alertsEnabled of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: bool
        """

        self._alertsEnabled = alertsEnabled

    @property
    def operatorAlertsEnabled(self):
        """
        Gets the operatorAlertsEnabled of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The operatorAlertsEnabled of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: bool
        """
        return self._operatorAlertsEnabled

    @operatorAlertsEnabled.setter
    def operatorAlertsEnabled(self, operatorAlertsEnabled):
        """
        Sets the operatorAlertsEnabled of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param operatorAlertsEnabled: The operatorAlertsEnabled of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: bool
        """

        self._operatorAlertsEnabled = operatorAlertsEnabled

    @property
    def status(self):
        """
        Gets the status of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The status of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param status: The status of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._status = status

    @property
    def statusModified(self):
        """
        Gets the statusModified of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The statusModified of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: datetime
        """
        return self._statusModified

    @statusModified.setter
    def statusModified(self, statusModified):
        """
        Sets the statusModified of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param statusModified: The statusModified of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: datetime
        """

        self._statusModified = statusModified

    @property
    def previousData(self):
        """
        Gets the previousData of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The previousData of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._previousData

    @previousData.setter
    def previousData(self, previousData):
        """
        Sets the previousData of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param previousData: The previousData of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._previousData = previousData

    @property
    def previousCreated(self):
        """
        Gets the previousCreated of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The previousCreated of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: datetime
        """
        return self._previousCreated

    @previousCreated.setter
    def previousCreated(self, previousCreated):
        """
        Sets the previousCreated of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param previousCreated: The previousCreated of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: datetime
        """

        self._previousCreated = previousCreated

    @property
    def draftData(self):
        """
        Gets the draftData of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The draftData of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._draftData

    @draftData.setter
    def draftData(self, draftData):
        """
        Sets the draftData of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param draftData: The draftData of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._draftData = draftData

    @property
    def draftCreated(self):
        """
        Gets the draftCreated of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The draftCreated of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: datetime
        """
        return self._draftCreated

    @draftCreated.setter
    def draftCreated(self, draftCreated):
        """
        Sets the draftCreated of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param draftCreated: The draftCreated of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: datetime
        """

        self._draftCreated = draftCreated

    @property
    def draftComment(self):
        """
        Gets the draftComment of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The draftComment of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._draftComment

    @draftComment.setter
    def draftComment(self, draftComment):
        """
        Sets the draftComment of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param draftComment: The draftComment of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._draftComment = draftComment

    @property
    def data(self):
        """
        Gets the data of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The data of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: MonitoringGetEnterpriseEdgeVnfStatusResultItemData
        """
        return self._data

    @data.setter
    def data(self, data):
        """
        Sets the data of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param data: The data of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: MonitoringGetEnterpriseEdgeVnfStatusResultItemData
        """

        self._data = data

    @property
    def lastContact(self):
        """
        Gets the lastContact of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The lastContact of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: datetime
        """
        return self._lastContact

    @lastContact.setter
    def lastContact(self, lastContact):
        """
        Sets the lastContact of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param lastContact: The lastContact of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: datetime
        """

        self._lastContact = lastContact

    @property
    def version(self):
        """
        Gets the version of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The version of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """
        Sets the version of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param version: The version of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: str
        """

        self._version = version

    @property
    def modified(self):
        """
        Gets the modified of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The modified of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: datetime
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """
        Sets the modified of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param modified: The modified of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: datetime
        """

        self._modified = modified

    @property
    def edgeCount(self):
        """
        Gets the edgeCount of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The edgeCount of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: int
        """
        return self._edgeCount

    @edgeCount.setter
    def edgeCount(self, edgeCount):
        """
        Sets the edgeCount of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param edgeCount: The edgeCount of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: int
        """

        self._edgeCount = edgeCount

    @property
    def edgeUsage(self):
        """
        Gets the edgeUsage of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :return: The edgeUsage of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :rtype: list[MonitoringGetEnterpriseEdgeVnfStatusResultItemEdgeUsage]
        """
        return self._edgeUsage

    @edgeUsage.setter
    def edgeUsage(self, edgeUsage):
        """
        Sets the edgeUsage of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.

        :param edgeUsage: The edgeUsage of this MonitoringGetEnterpriseEdgeVnfStatusResultItem.
        :type: list[MonitoringGetEnterpriseEdgeVnfStatusResultItemEdgeUsage]
        """

        self._edgeUsage = edgeUsage

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, MonitoringGetEnterpriseEdgeVnfStatusResultItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
