# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ProxyEdgeInventoryObject(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, enterpriseName=None, enterpriseId=None, edgeName=None, edgeId=None, created=None, edgeState=None, serialNumber=None, haSerialNumber=None, activationState=None, activationTime=None, modelNumber=None, softwareVersion=None, softwareUpdated=None, lastContact=None):
        """
        ProxyEdgeInventoryObject - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'enterpriseName': 'str',
            'enterpriseId': 'int',
            'edgeName': 'str',
            'edgeId': 'int',
            'created': 'datetime',
            'edgeState': 'str',
            'serialNumber': 'str',
            'haSerialNumber': 'str',
            'activationState': 'str',
            'activationTime': 'datetime',
            'modelNumber': 'str',
            'softwareVersion': 'str',
            'softwareUpdated': 'datetime',
            'lastContact': 'datetime'
        }

        self.attribute_map = {
            'enterpriseName': 'enterpriseName',
            'enterpriseId': 'enterpriseId',
            'edgeName': 'edgeName',
            'edgeId': 'edgeId',
            'created': 'created',
            'edgeState': 'edgeState',
            'serialNumber': 'serialNumber',
            'haSerialNumber': 'haSerialNumber',
            'activationState': 'activationState',
            'activationTime': 'activationTime',
            'modelNumber': 'modelNumber',
            'softwareVersion': 'softwareVersion',
            'softwareUpdated': 'softwareUpdated',
            'lastContact': 'lastContact'
        }

        self._enterpriseName = enterpriseName
        self._enterpriseId = enterpriseId
        self._edgeName = edgeName
        self._edgeId = edgeId
        self._created = created
        self._edgeState = edgeState
        self._serialNumber = serialNumber
        self._haSerialNumber = haSerialNumber
        self._activationState = activationState
        self._activationTime = activationTime
        self._modelNumber = modelNumber
        self._softwareVersion = softwareVersion
        self._softwareUpdated = softwareUpdated
        self._lastContact = lastContact

    @property
    def enterpriseName(self):
        """
        Gets the enterpriseName of this ProxyEdgeInventoryObject.

        :return: The enterpriseName of this ProxyEdgeInventoryObject.
        :rtype: str
        """
        return self._enterpriseName

    @enterpriseName.setter
    def enterpriseName(self, enterpriseName):
        """
        Sets the enterpriseName of this ProxyEdgeInventoryObject.

        :param enterpriseName: The enterpriseName of this ProxyEdgeInventoryObject.
        :type: str
        """

        self._enterpriseName = enterpriseName

    @property
    def enterpriseId(self):
        """
        Gets the enterpriseId of this ProxyEdgeInventoryObject.

        :return: The enterpriseId of this ProxyEdgeInventoryObject.
        :rtype: int
        """
        return self._enterpriseId

    @enterpriseId.setter
    def enterpriseId(self, enterpriseId):
        """
        Sets the enterpriseId of this ProxyEdgeInventoryObject.

        :param enterpriseId: The enterpriseId of this ProxyEdgeInventoryObject.
        :type: int
        """

        self._enterpriseId = enterpriseId

    @property
    def edgeName(self):
        """
        Gets the edgeName of this ProxyEdgeInventoryObject.

        :return: The edgeName of this ProxyEdgeInventoryObject.
        :rtype: str
        """
        return self._edgeName

    @edgeName.setter
    def edgeName(self, edgeName):
        """
        Sets the edgeName of this ProxyEdgeInventoryObject.

        :param edgeName: The edgeName of this ProxyEdgeInventoryObject.
        :type: str
        """

        self._edgeName = edgeName

    @property
    def edgeId(self):
        """
        Gets the edgeId of this ProxyEdgeInventoryObject.

        :return: The edgeId of this ProxyEdgeInventoryObject.
        :rtype: int
        """
        return self._edgeId

    @edgeId.setter
    def edgeId(self, edgeId):
        """
        Sets the edgeId of this ProxyEdgeInventoryObject.

        :param edgeId: The edgeId of this ProxyEdgeInventoryObject.
        :type: int
        """

        self._edgeId = edgeId

    @property
    def created(self):
        """
        Gets the created of this ProxyEdgeInventoryObject.

        :return: The created of this ProxyEdgeInventoryObject.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this ProxyEdgeInventoryObject.

        :param created: The created of this ProxyEdgeInventoryObject.
        :type: datetime
        """

        self._created = created

    @property
    def edgeState(self):
        """
        Gets the edgeState of this ProxyEdgeInventoryObject.

        :return: The edgeState of this ProxyEdgeInventoryObject.
        :rtype: str
        """
        return self._edgeState

    @edgeState.setter
    def edgeState(self, edgeState):
        """
        Sets the edgeState of this ProxyEdgeInventoryObject.

        :param edgeState: The edgeState of this ProxyEdgeInventoryObject.
        :type: str
        """

        self._edgeState = edgeState

    @property
    def serialNumber(self):
        """
        Gets the serialNumber of this ProxyEdgeInventoryObject.

        :return: The serialNumber of this ProxyEdgeInventoryObject.
        :rtype: str
        """
        return self._serialNumber

    @serialNumber.setter
    def serialNumber(self, serialNumber):
        """
        Sets the serialNumber of this ProxyEdgeInventoryObject.

        :param serialNumber: The serialNumber of this ProxyEdgeInventoryObject.
        :type: str
        """

        self._serialNumber = serialNumber

    @property
    def haSerialNumber(self):
        """
        Gets the haSerialNumber of this ProxyEdgeInventoryObject.

        :return: The haSerialNumber of this ProxyEdgeInventoryObject.
        :rtype: str
        """
        return self._haSerialNumber

    @haSerialNumber.setter
    def haSerialNumber(self, haSerialNumber):
        """
        Sets the haSerialNumber of this ProxyEdgeInventoryObject.

        :param haSerialNumber: The haSerialNumber of this ProxyEdgeInventoryObject.
        :type: str
        """

        self._haSerialNumber = haSerialNumber

    @property
    def activationState(self):
        """
        Gets the activationState of this ProxyEdgeInventoryObject.

        :return: The activationState of this ProxyEdgeInventoryObject.
        :rtype: str
        """
        return self._activationState

    @activationState.setter
    def activationState(self, activationState):
        """
        Sets the activationState of this ProxyEdgeInventoryObject.

        :param activationState: The activationState of this ProxyEdgeInventoryObject.
        :type: str
        """

        self._activationState = activationState

    @property
    def activationTime(self):
        """
        Gets the activationTime of this ProxyEdgeInventoryObject.

        :return: The activationTime of this ProxyEdgeInventoryObject.
        :rtype: datetime
        """
        return self._activationTime

    @activationTime.setter
    def activationTime(self, activationTime):
        """
        Sets the activationTime of this ProxyEdgeInventoryObject.

        :param activationTime: The activationTime of this ProxyEdgeInventoryObject.
        :type: datetime
        """

        self._activationTime = activationTime

    @property
    def modelNumber(self):
        """
        Gets the modelNumber of this ProxyEdgeInventoryObject.

        :return: The modelNumber of this ProxyEdgeInventoryObject.
        :rtype: str
        """
        return self._modelNumber

    @modelNumber.setter
    def modelNumber(self, modelNumber):
        """
        Sets the modelNumber of this ProxyEdgeInventoryObject.

        :param modelNumber: The modelNumber of this ProxyEdgeInventoryObject.
        :type: str
        """

        self._modelNumber = modelNumber

    @property
    def softwareVersion(self):
        """
        Gets the softwareVersion of this ProxyEdgeInventoryObject.

        :return: The softwareVersion of this ProxyEdgeInventoryObject.
        :rtype: str
        """
        return self._softwareVersion

    @softwareVersion.setter
    def softwareVersion(self, softwareVersion):
        """
        Sets the softwareVersion of this ProxyEdgeInventoryObject.

        :param softwareVersion: The softwareVersion of this ProxyEdgeInventoryObject.
        :type: str
        """

        self._softwareVersion = softwareVersion

    @property
    def softwareUpdated(self):
        """
        Gets the softwareUpdated of this ProxyEdgeInventoryObject.

        :return: The softwareUpdated of this ProxyEdgeInventoryObject.
        :rtype: datetime
        """
        return self._softwareUpdated

    @softwareUpdated.setter
    def softwareUpdated(self, softwareUpdated):
        """
        Sets the softwareUpdated of this ProxyEdgeInventoryObject.

        :param softwareUpdated: The softwareUpdated of this ProxyEdgeInventoryObject.
        :type: datetime
        """

        self._softwareUpdated = softwareUpdated

    @property
    def lastContact(self):
        """
        Gets the lastContact of this ProxyEdgeInventoryObject.

        :return: The lastContact of this ProxyEdgeInventoryObject.
        :rtype: datetime
        """
        return self._lastContact

    @lastContact.setter
    def lastContact(self, lastContact):
        """
        Sets the lastContact of this ProxyEdgeInventoryObject.

        :param lastContact: The lastContact of this ProxyEdgeInventoryObject.
        :type: datetime
        """

        self._lastContact = lastContact

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ProxyEdgeInventoryObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
