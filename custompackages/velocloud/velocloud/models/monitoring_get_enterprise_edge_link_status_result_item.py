# coding: utf-8

"""
    Velocloud API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 3.2.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class MonitoringGetEnterpriseEdgeLinkStatusResultItem(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, edgeId=None, edgeLastContact=None, edgeModelNumber=None, edgeName=None, edgeServiceUpSince=None, edgeState=None, edgeSystemUpSince=None, enterpriseId=None, enterpriseName=None, interface=None, isp=None, linkId=None, linkLastActive=None, linkState=None):
        """
        MonitoringGetEnterpriseEdgeLinkStatusResultItem - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'edgeId': 'int',
            'edgeLastContact': 'datetime',
            'edgeModelNumber': 'str',
            'edgeName': 'str',
            'edgeServiceUpSince': 'datetime',
            'edgeState': 'str',
            'edgeSystemUpSince': 'datetime',
            'enterpriseId': 'int',
            'enterpriseName': 'str',
            'interface': 'str',
            'isp': 'str',
            'linkId': 'int',
            'linkLastActive': 'datetime',
            'linkState': 'str'
        }

        self.attribute_map = {
            'edgeId': 'edgeId',
            'edgeLastContact': 'edgeLastContact',
            'edgeModelNumber': 'edgeModelNumber',
            'edgeName': 'edgeName',
            'edgeServiceUpSince': 'edgeServiceUpSince',
            'edgeState': 'edgeState',
            'edgeSystemUpSince': 'edgeSystemUpSince',
            'enterpriseId': 'enterpriseId',
            'enterpriseName': 'enterpriseName',
            'interface': 'interface',
            'isp': 'isp',
            'linkId': 'linkId',
            'linkLastActive': 'linkLastActive',
            'linkState': 'linkState'
        }

        self._edgeId = edgeId
        self._edgeLastContact = edgeLastContact
        self._edgeModelNumber = edgeModelNumber
        self._edgeName = edgeName
        self._edgeServiceUpSince = edgeServiceUpSince
        self._edgeState = edgeState
        self._edgeSystemUpSince = edgeSystemUpSince
        self._enterpriseId = enterpriseId
        self._enterpriseName = enterpriseName
        self._interface = interface
        self._isp = isp
        self._linkId = linkId
        self._linkLastActive = linkLastActive
        self._linkState = linkState

    @property
    def edgeId(self):
        """
        Gets the edgeId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The edgeId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: int
        """
        return self._edgeId

    @edgeId.setter
    def edgeId(self, edgeId):
        """
        Sets the edgeId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param edgeId: The edgeId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: int
        """

        self._edgeId = edgeId

    @property
    def edgeLastContact(self):
        """
        Gets the edgeLastContact of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The edgeLastContact of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: datetime
        """
        return self._edgeLastContact

    @edgeLastContact.setter
    def edgeLastContact(self, edgeLastContact):
        """
        Sets the edgeLastContact of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param edgeLastContact: The edgeLastContact of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: datetime
        """

        self._edgeLastContact = edgeLastContact

    @property
    def edgeModelNumber(self):
        """
        Gets the edgeModelNumber of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The edgeModelNumber of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: str
        """
        return self._edgeModelNumber

    @edgeModelNumber.setter
    def edgeModelNumber(self, edgeModelNumber):
        """
        Sets the edgeModelNumber of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param edgeModelNumber: The edgeModelNumber of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: str
        """

        self._edgeModelNumber = edgeModelNumber

    @property
    def edgeName(self):
        """
        Gets the edgeName of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The edgeName of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: str
        """
        return self._edgeName

    @edgeName.setter
    def edgeName(self, edgeName):
        """
        Sets the edgeName of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param edgeName: The edgeName of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: str
        """

        self._edgeName = edgeName

    @property
    def edgeServiceUpSince(self):
        """
        Gets the edgeServiceUpSince of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The edgeServiceUpSince of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: datetime
        """
        return self._edgeServiceUpSince

    @edgeServiceUpSince.setter
    def edgeServiceUpSince(self, edgeServiceUpSince):
        """
        Sets the edgeServiceUpSince of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param edgeServiceUpSince: The edgeServiceUpSince of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: datetime
        """

        self._edgeServiceUpSince = edgeServiceUpSince

    @property
    def edgeState(self):
        """
        Gets the edgeState of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The edgeState of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: str
        """
        return self._edgeState

    @edgeState.setter
    def edgeState(self, edgeState):
        """
        Sets the edgeState of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param edgeState: The edgeState of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: str
        """

        self._edgeState = edgeState

    @property
    def edgeSystemUpSince(self):
        """
        Gets the edgeSystemUpSince of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The edgeSystemUpSince of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: datetime
        """
        return self._edgeSystemUpSince

    @edgeSystemUpSince.setter
    def edgeSystemUpSince(self, edgeSystemUpSince):
        """
        Sets the edgeSystemUpSince of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param edgeSystemUpSince: The edgeSystemUpSince of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: datetime
        """

        self._edgeSystemUpSince = edgeSystemUpSince

    @property
    def enterpriseId(self):
        """
        Gets the enterpriseId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The enterpriseId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: int
        """
        return self._enterpriseId

    @enterpriseId.setter
    def enterpriseId(self, enterpriseId):
        """
        Sets the enterpriseId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param enterpriseId: The enterpriseId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: int
        """

        self._enterpriseId = enterpriseId

    @property
    def enterpriseName(self):
        """
        Gets the enterpriseName of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The enterpriseName of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: str
        """
        return self._enterpriseName

    @enterpriseName.setter
    def enterpriseName(self, enterpriseName):
        """
        Sets the enterpriseName of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param enterpriseName: The enterpriseName of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: str
        """

        self._enterpriseName = enterpriseName

    @property
    def interface(self):
        """
        Gets the interface of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The interface of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: str
        """
        return self._interface

    @interface.setter
    def interface(self, interface):
        """
        Sets the interface of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param interface: The interface of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: str
        """

        self._interface = interface

    @property
    def isp(self):
        """
        Gets the isp of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The isp of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: str
        """
        return self._isp

    @isp.setter
    def isp(self, isp):
        """
        Sets the isp of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param isp: The isp of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: str
        """

        self._isp = isp

    @property
    def linkId(self):
        """
        Gets the linkId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The linkId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: int
        """
        return self._linkId

    @linkId.setter
    def linkId(self, linkId):
        """
        Sets the linkId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param linkId: The linkId of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: int
        """

        self._linkId = linkId

    @property
    def linkLastActive(self):
        """
        Gets the linkLastActive of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The linkLastActive of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: datetime
        """
        return self._linkLastActive

    @linkLastActive.setter
    def linkLastActive(self, linkLastActive):
        """
        Sets the linkLastActive of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param linkLastActive: The linkLastActive of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: datetime
        """

        self._linkLastActive = linkLastActive

    @property
    def linkState(self):
        """
        Gets the linkState of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :return: The linkState of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :rtype: str
        """
        return self._linkState

    @linkState.setter
    def linkState(self, linkState):
        """
        Sets the linkState of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.

        :param linkState: The linkState of this MonitoringGetEnterpriseEdgeLinkStatusResultItem.
        :type: str
        """

        self._linkState = linkState

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, MonitoringGetEnterpriseEdgeLinkStatusResultItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
